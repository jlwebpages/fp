
function build_input_form()
{
   if (top.post_season == false)
   {
      // Reset Input Form week number to the current week.

      top.global_week = top.current_input_week;

      build_regular_season_form();
   }
   else
   {
      build_post_season_form();
   }
}


function build_regular_season_form()
{
   if (input_form_global_variables() == false)
   {
      return false;
   }

   var current_input_week = top.current_input_week;
   var max_no_of_games    = 16;
   var week               = current_input_week;

   if (current_input_week > 17) current_input_week = 17;
   if (week > 17)                             week = 17;

   if (top.global_week > 0 && top.global_week < 18)
   {
      week = top.global_week;
   }

   var home_teams      = top.all_home_teams[week-1];
   var visiting_teams  = top.all_visiting_teams[week-1];
   var open_date       = top.all_open_dates[week-1];
   var number_of_games = home_teams.length;

   //JLif (week != current_input_week)
   //JL{
   //JL   alert("Week " + week + " picks are not due yet.  " +
   //JL         "Week " + current_input_week + " picks are due next.\n\n" +
   //JL         "Please be sure to submit your week " + current_input_week +
   //JL         " picks on time.\n\n" +
   //JL         "You can make your picks for week " + week + " and submit them " +
   //JL         "now if you are going to be unavailable to submit them during week " +
   //JL         week + ".");
   //JL}

   document.open();

   var d = document;

   d.writeln('<html>');
   d.writeln('');

   d.writeln('<head>');
   d.writeln('   <title>NFL Football Pool</title>');
   d.writeln('   <link href="fp.css" rel="stylesheet" type="text/css">');
   d.writeln('   <style type="text/css">');
   d.writeln('   <!--');
   d.writeln('      TD              {border-style:        solid;');
   d.writeln('                       border-color:    lightgray;');
   d.writeln('                       border-top-width:      0px;');
   d.writeln('                       border-right-width:    1px;');
   d.writeln('                       border-bottom-width:   1px;');
   d.writeln('                       border-left-width:     0px}');
   d.writeln('      .no_border      {border-style:        solid;');
   d.writeln('                       border-top-width:      0px;');
   d.writeln('                       border-right-width:    0px;');
   d.writeln('                       border-bottom-width:   0px;');
   d.writeln('                       border-left-width:     0px}');
   d.writeln('      .b3_border      {border: 3px solid    black}');
   d.writeln('      .bb2_border     {border-style:        solid;');
   d.writeln('                       border-color:        black;');
   d.writeln('                       border-top-width:      0px;');
   d.writeln('                       border-right-width:    0px;');
   d.writeln('                       border-bottom-width:   2px;');
   d.writeln('                       border-left-width:     0px}');
   d.writeln('      .bb2_gr1_border {border-style:        solid;');
   d.writeln('                       border-color: white lightgray black white;');
   d.writeln('                       border-top-width:      0px;');
   d.writeln('                       border-right-width:    1px;');
   d.writeln('                       border-bottom-width:   2px;');
   d.writeln('                       border-left-width:     0px}');
   d.writeln('      .br2_border     {border-style:        solid;');
   d.writeln('                       border-color:        black;');
   d.writeln('                       border-top-width:      0px;');
   d.writeln('                       border-right-width:    2px;');
   d.writeln('                       border-bottom-width:   0px;');
   d.writeln('                       border-left-width:     0px}');
   d.writeln('      .br2_bb2_border {border-style:        solid;');
   d.writeln('                       border-color: white black black white;');
   d.writeln('                       border-top-width:      0px;');
   d.writeln('                       border-right-width:    2px;');
   d.writeln('                       border-bottom-width:   2px;');
   d.writeln('                       border-left-width:     0px}');
   d.writeln('      .br2_gb1_border {border-style:        solid;');
   d.writeln('                       border-color: white black lightgray white;');
   d.writeln('                       border-top-width:      0px;');
   d.writeln('                       border-right-width:    2px;');
   d.writeln('                       border-bottom-width:   1px;');
   d.writeln('                       border-left-width:     0px}');
   d.writeln('      .bt2_border     {border-style:        solid;');
   d.writeln('                       border-color:        black;');
   d.writeln('                       border-top-width:      2px;');
   d.writeln('                       border-right-width:    0px;');
   d.writeln('                       border-bottom-width:   0px;');
   d.writeln('                       border-left-width:     0px}');
   d.writeln('      .gb1_border     {border-style:        solid;');
   d.writeln('                       border-color:    lightgray;');
   d.writeln('                       border-top-width:      0px;');
   d.writeln('                       border-right-width:    0px;');
   d.writeln('                       border-bottom-width:   1px;');
   d.writeln('                       border-left-width:     0px}');
   d.writeln('      .gr1_border     {border-style:        solid;');
   d.writeln('                       border-color:    lightgray;');
   d.writeln('                       border-top-width:      0px;');
   d.writeln('                       border-right-width:    1px;');
   d.writeln('                       border-bottom-width:   0px;');
   d.writeln('                       border-left-width:     0px}');
   d.writeln('   -->');
   d.writeln('   </style>');
   d.writeln('</head>');
   d.writeln('');

   d.writeln('<body class="light_gray_background"');
   d.writeln('<     style="border: 0px solid black;');  //JL - Should be 1px, but FireFox has a bug.
   d.writeln('              color: black;');
   d.writeln('        font-family: Calibri;">');
   d.writeln('');
   d.writeln('');

   d.writeln('');
   d.writeln('');

   d.writeln('<script language="JavaScript" type="text/javascript">');
   d.writeln('');
   d.writeln('');
   d.writeln('// Define home and visiting teams for display.');
   d.writeln('');
   d.writeln('var home_teams     = top.home_teams_'+week+';');
   d.writeln('var visiting_teams = top.visiting_teams_'+week+';');
   d.writeln('');
   d.writeln('');
   d.writeln('// Define arrays for the selected picks and weights.');
   d.writeln('');
   d.writeln('var picks   = new Array ('+number_of_games+');');
   d.writeln('var weights = new Array ('+number_of_games+');');
   d.writeln('');
   d.writeln('');
   d.writeln('// Define variables to use for automatically fixing player');
   d.writeln('// picks when there is one instance of a duplicate weight.');
   d.writeln('');
   d.writeln('var duplicate_weight_game_1        = null;');
   d.writeln('var duplicate_weight_game_2        = null;');
   d.writeln('var game_to_retain_weight          = null;');
   d.writeln('var input_form_element_to_focus_on = null;');
   d.writeln('');
   d.writeln('');
   d.writeln('// Define variables for the picks from odds function.');
   d.writeln('');
   d.writeln('var picks_from_odds_button_pressed = false;');
   d.writeln('var spreads                        = new Array ('+number_of_games+');');
   d.writeln('');
   d.writeln('clear_spreads_array();');
   d.writeln('');
   d.writeln('');
   d.writeln('// Define flags for random picks function.');
   d.writeln('');
   d.writeln('var random_mn_points_generated  = false;');
   d.writeln('var random_picks_button_pressed = false;');
   d.writeln('var random_picks_generated      = "All";');
   d.writeln('');
   d.writeln('');
   d.writeln('function accept_picks(document)');
   d.writeln('{');
   d.writeln('   var inputs          = document.fp_inputs;');
   d.writeln('   var mn_points       = inputs.mn_points;');
   d.writeln('   var picks_confirmed = false;');
   d.writeln('');
   d.writeln('');
   d.writeln('   random_picks_button_pressed = false;');
   d.writeln('');
   d.writeln('   if (validate_picks_and_weights(document,"initial_pass") == false)');
   d.writeln('   {');
   d.writeln('      return false;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   if (validate_monday_night_points(mn_points,true) == false)');
   d.writeln('   {');
   d.writeln('      // Make sure the frame showing the Input Form is visible before returning.');
   d.writeln('');
   d.writeln('      top.display_frame("fp_main");');
   d.writeln('');
   d.writeln('      return false;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   if (validate_name(document,true) == false)');
   d.writeln('   {');
   d.writeln('      // Make sure the frame showing the Input Form is visible before returning.');
   d.writeln('');
   d.writeln('      top.display_frame("fp_main");');
   d.writeln('');
   d.writeln('      return false;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   display_confirmation_dialog(document);');
   d.writeln('');
   d.writeln('   return true;');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function build_player_name(player_menu_index)');
   d.writeln('{');
   d.writeln('   if ( (player_menu_index < 0) || (player_menu_index > top.number_of_rs_players) )');
   d.writeln('   {');
   d.writeln('      player_menu_index = top.player_index;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   if (player_menu_index > 0)');
   d.writeln('   {');
   d.writeln('      return top.rs_players_description[player_menu_index-1]+" ("+top.rs_players[player_menu_index-1]+")";');
   d.writeln('   }');
   d.writeln('   else');
   d.writeln('   {');
   d.writeln('      return "";');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   return "";  // Should never get here.');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function change_week(document)');
   d.writeln('{');
   d.writeln('   var selected_week_menu  = document.fp_inputs.selected_week_menu;');
   d.writeln('   var selected_week_index = selected_week_menu.selectedIndex;');
   d.writeln('   var selected_week       = selected_week_menu.options[selected_week_index].value;');
   d.writeln('');
   d.writeln('');
   d.writeln('   top.global_week  = selected_week;');
   d.writeln('   top.player_index = document.fp_inputs.player_name_menu.selectedIndex;');
   d.writeln('');
   d.writeln('   document.location.href = "fp_input_form_change.html";');
   d.writeln('');
   d.writeln('   return true;');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function clear_spreads_array()');
   d.writeln('{');
   d.writeln('   for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('   {');
   d.writeln('      spreads[i] = "";');
   d.writeln('   }');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function display_confirmation_dialog(document)');
   d.writeln('{');
   d.writeln('   var confirmation_message = "";');
   d.writeln('   var inputs               = document.fp_inputs;');
   d.writeln('   var mn_points            = inputs.mn_points.value;');
   d.writeln('   var player_name          = build_player_name(-1);');
   d.writeln('');
   d.writeln('');
   d.writeln('   confirmation_message  = "Week " + '+week+' + " Picks\\n\\n\\n";');
   d.writeln('   confirmation_message += "Name: " + player_name + "\\n\\n";');
   d.writeln('   confirmation_message += format_picks_for_dialog(document,false,0) + "\\n";');
   d.writeln('   confirmation_message += "Monday Night Total Points: " + mn_points + "\\n\\n\\n";');
   d.writeln('   confirmation_message += "Submit  - Submit your picks via automatic e-mail.\\n\\n";');
   d.writeln('   confirmation_message += "Copy    - Copy your picks and manually e-mail them.\\n\\n";');
   d.writeln('   confirmation_message += "Go Back - Return to Input Form.";');
   d.writeln('');
   d.writeln('   display_picks_message(confirmation_message,"confirm_picks");');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function display_picks_message(picks_message,message_mode)');
   d.writeln('{');
   d.writeln('   var background_color     = "";');
   d.writeln('   var button_1             = "Go Back";');
   d.writeln('   var button_2             = "";');
   d.writeln('   var button_3             = "";');
   d.writeln('   var dialog_frame         = null;');
   d.writeln('   var green_color          = "#C4D79B";');
   d.writeln('   var random_picks_message = "";');
   d.writeln('   var red_color            = "#FFCCCC";');
   d.writeln('   var white_color          = "white";');
   d.writeln('');
   d.writeln('');
   d.writeln('   background_color = red_color;');
   d.writeln('');
   d.writeln('   if (message_mode == "one_duplicate_weight")');
   d.writeln('   {');
   d.writeln('      button_2 = "Fix 2";');
   d.writeln('      button_3 = "Fix 1";');
   d.writeln('   }');
   d.writeln('   else if (message_mode == "confirm_picks")');
   d.writeln('   {');
   d.writeln('      background_color = green_color;');
   d.writeln('      button_2         = "Submit";');
   d.writeln('      button_3         = "Copy";');
   d.writeln('   }');
   d.writeln('   else if (message_mode == "copy")');
   d.writeln('   {');
   d.writeln('      background_color = white_color;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   dialog_frame = window.open("","fp_picks","");');
   d.writeln('');
   d.writeln('   wd = dialog_frame.document.open();');
   d.writeln('');
   d.writeln('   wd.writeln("<html>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("<head>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("   <title>NFL Football Pool</title>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("   <link href=\\"fp.css\\" rel=\\"stylesheet\\" type=\\"text/css\\">");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("   <style type=\\"text/css\\">");');
   d.writeln('   wd.writeln("   <!--");');
   d.writeln('   wd.writeln("      .table_style {background-color:"+background_color+";border:3px solid black;text-align:left}");');
   d.writeln('   wd.writeln("   -->");');
   d.writeln('   wd.writeln("   </style>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("</head>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("<body class=\\"light_gray_background\\"");');
   d.writeln('   wd.writeln("      style=\\"border: 0px solid black;");');  //JL - Should be 1px, but FireFox has a bug.
   d.writeln('   wd.writeln("              color: black;");');
   d.writeln('   wd.writeln("        font-family: Calibri;\\">");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("<script language=\\"JavaScript\\" type=\\"text/javascript\\">");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("function respond_to_button(action)");');
   d.writeln('   wd.writeln("{");');
   d.writeln('   wd.writeln("   if (action == \\"submit\\")");');
   d.writeln('   wd.writeln("   {");');
   d.writeln('   wd.writeln("      top.fp_main.e_mail_picks(top.fp_main.document);");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("      return true;");');
   d.writeln('   wd.writeln("   }");');
   d.writeln('   wd.writeln("   else if (action == \\"copy\\")");');
   d.writeln('   wd.writeln("   {");');
   d.writeln('   wd.writeln("      top.fp_main.display_picks_message(\\"\\",\\"copy\\");");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("      return true;");');
   d.writeln('   wd.writeln("   }");');
   d.writeln('   wd.writeln("   else if (action == \\"go_back\\")");');
   d.writeln('   wd.writeln("   {");');
   d.writeln('   wd.writeln("      if (\\""+message_mode+"\\" == \\"copy\\")");');
   d.writeln('   wd.writeln("      {");');
   d.writeln('   wd.writeln("         top.fp_main.display_confirmation_dialog(top.fp_main.document);");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("         return true;");');
   d.writeln('   wd.writeln("      }");');
   d.writeln('   wd.writeln("      else");');
   d.writeln('   wd.writeln("      {");');
   d.writeln('   wd.writeln("         top.display_frame(\\"fp_main\\");");');
   d.writeln('   wd.writeln("      }");');
   d.writeln('   wd.writeln("   }");');
   d.writeln('   wd.writeln("   else if (action == \\"fix_1\\")");');
   d.writeln('   wd.writeln("   {");');
   d.writeln('   wd.writeln("      top.fp_main.game_to_retain_weight = top.fp_main.duplicate_weight_game_1;");');
   d.writeln('   wd.writeln("      top.fp_main.validate_picks_and_weights(top.fp_main.document,\\"auto_fix\\");");');
   d.writeln('   wd.writeln("      top.fp_main.accept_picks(top.fp_main.document);");');
   d.writeln('   wd.writeln("   }");');
   d.writeln('   wd.writeln("   else if (action == \\"fix_2\\")");');
   d.writeln('   wd.writeln("   {");');
   d.writeln('   wd.writeln("      top.fp_main.game_to_retain_weight = top.fp_main.duplicate_weight_game_2;");');
   d.writeln('   wd.writeln("      top.fp_main.validate_picks_and_weights(top.fp_main.document,\\"auto_fix\\");");');
   d.writeln('   wd.writeln("      top.fp_main.accept_picks(top.fp_main.document);");');
   d.writeln('   wd.writeln("   }");');
   d.writeln('   wd.writeln("   else  // Should never get here.");');
   d.writeln('   wd.writeln("   {");');
   d.writeln('   wd.writeln("      top.display_frame(\\"fp_main\\");");');
   d.writeln('   wd.writeln("   }");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("   if (top.fp_main.picks_from_odds_button_pressed == true)");');
   d.writeln('   wd.writeln("   {");');
   d.writeln('   wd.writeln("      // Reset picks_from_odds_button_pressed flag.");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("      top.fp_main.picks_from_odds_button_pressed = false;");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("      // Clear out NFL Odds spreads array.");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("      top.fp_main.clear_spreads_array();");');
   d.writeln('   wd.writeln("   }");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("   if (top.fp_main.random_picks_button_pressed == true)");');
   d.writeln('   wd.writeln("   {");');
   d.writeln('   wd.writeln("      // Reset random_picks_button_pressed flag.");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("      top.fp_main.random_picks_button_pressed = false;");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("      if (top.fp_main.random_mn_points_generated == true)");');
   d.writeln('   wd.writeln("      {");');
   d.writeln('   wd.writeln("         // Reset the Monday Night Total Points on the Input Form.");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("         top.fp_main.document.fp_inputs.mn_points.value = \\"\\";");');
   d.writeln('   wd.writeln("      }");');
   d.writeln('   wd.writeln("   }");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("   return true;");');
   d.writeln('   wd.writeln("}");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("<" + "/script>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("<center>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("<br>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("<table cellpadding=10 class=\\"table_style\\">");');
   d.writeln('   wd.writeln("");');
   d.writeln('   if ( (message_mode == "copy") )');
   d.writeln('   {');
   d.writeln('      // Format picks for display.');
   d.writeln('');
   d.writeln('      picks_message  = "<span style=\\"font-family: Calibri;font-size:11pt\\">";');
   d.writeln('      picks_message += "<b>Manually create an e-mail message and send it to:</b><br><br>";');
   d.writeln('      picks_message += "fp@socal.rr.com<br><br>";');
   d.writeln('      picks_message += "<b>Copy the following into the message subject line:</b><br><br>";');
   d.writeln('      picks_message += build_player_name(-1) + " - Week "+'+week+'+" Picks<br><br>";');
   d.writeln('      picks_message += "<b>Copy all of the following exactly as is into the message body:</b><br><br>";');
   d.writeln('');
   d.writeln('      for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('      {');
   d.writeln('         // Add blank lines before the Monday Night game if there');
   d.writeln('         // are less than the maximum number of games scheduled.');
   d.writeln('');
   d.writeln('         if (i+1 == '+number_of_games+')');
   d.writeln('         {');
   d.writeln('            for (var j = 1; j <= '+max_no_of_games+'-'+number_of_games+'; j++)');
   d.writeln('            {');
   d.writeln('               picks_message += "<br>";');
   d.writeln('            }');
   d.writeln('         }');
   d.writeln('');
   d.writeln('         picks_message += picks[i] + " " + weights[i] + "<br>";');
   d.writeln('   }');
   d.writeln('');
   d.writeln('      picks_message += "pts: " + top.fp_main.document.fp_inputs.mn_points.value;');
   d.writeln('');
   d.writeln('      if (picks_from_odds_button_pressed == true)');
   d.writeln('      {');
   d.writeln('         picks_message += "<br><br>These picks were generated from the NFL Odds.";');
   d.writeln('      }');
   d.writeln('      else if (random_picks_button_pressed == true)');
   d.writeln('      {');
   d.writeln('         picks_message += "<br><br>"+random_picks_generated+" of these picks were randomly generated.";');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      picks_message += "</span>";');
   d.writeln('   }');
   d.writeln('   else if ( (message_mode != "confirm_picks") && (random_picks_button_pressed == true) )');
   d.writeln('   {');
   d.writeln('      random_picks_message = "You can\'t use the same weight more than once.\\n\\n\\n";');
   d.writeln('   }');
   d.writeln('   wd.writeln("<tr><td><pre>"+random_picks_message+picks_message+"</pre></td></tr>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("<tr align=center><td>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   if (button_2 == "Fix 2")');
   d.writeln('   {');
   d.writeln('      wd.writeln("   <input type=button style=\\"font-size: 11pt; font-family: Calibri; border: 1px solid black\\" value=\\""+button_3+"\\" onClick=respond_to_button(\\"fix_1\\");>");');
   d.writeln('      wd.writeln("   &nbsp&nbsp&nbsp");');
   d.writeln('      wd.writeln("   <input type=button style=\\"font-size: 11pt; font-family: Calibri; border: 1px solid black\\" value=\\""+button_2+"\\" onClick=respond_to_button(\\"fix_2\\");>");');
   d.writeln('      wd.writeln("   &nbsp&nbsp&nbsp");');
   d.writeln('   }');
   d.writeln('   else if (button_2 == "Submit")');
   d.writeln('   {');
   d.writeln('      wd.writeln("   <input type=button style=\\"font-size: 11pt; font-family: Calibri; border: 1px solid black\\" value=\\""+button_2+"\\" onClick=respond_to_button(\\"submit\\");>");');
   d.writeln('      wd.writeln("   &nbsp&nbsp&nbsp");');
   d.writeln('      wd.writeln("   <input type=button style=\\"font-size: 11pt; font-family: Calibri; border: 1px solid black\\" value=\\""+button_3+"\\" onClick=respond_to_button(\\"copy\\");>");');
   d.writeln('      wd.writeln("   &nbsp&nbsp&nbsp");');
   d.writeln('   }');
   d.writeln('   wd.writeln("   <input type=button style=\\"font-size: 11pt; font-family: Calibri; border: 1px solid black\\" value=\\""+button_1+"\\" onClick=respond_to_button(\\"go_back\\");>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("</td></tr>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("</table>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("<br>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("</center>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("</body>")');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("</html>");');
   d.writeln('');
   d.writeln('   wd.close();');
   d.writeln('');
   d.writeln('   // Hide the frame showing the Input Form and show the frame showing the "picks message."');
   d.writeln('');
   d.writeln('   top.display_frame("fp_picks");');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function e_mail_picks(document)');
   d.writeln('{');
   d.writeln('   var inputs    = document.fp_inputs;');
   d.writeln('   var mn_points = inputs.mn_points.value;');
   d.writeln('   var name      = build_player_name(-1);');
   d.writeln('   var mail_msg  = "";');
   d.writeln('');
   d.writeln('');
   d.writeln('   alert("An e-mail message containing your Week ' + week + ' Picks will be displayed.\\n\\n"');
   d.writeln('         + "Don\'t modify the message.  Click \\"Send\\" to submit your picks.");');
   d.writeln('');
   d.writeln('   mail_msg += "mailto:fp@socal.rr.com?subject=";');
   d.writeln('   mail_msg += escape(name + " - Week "+'+week+'+" Picks");');
   d.writeln('   mail_msg += "&body=";');
   d.writeln('');
   d.writeln('   for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('   {');
   d.writeln('      // Add blank lines before the Monday Night game if there');
   d.writeln('      // are less than the maximum number of games scheduled.');
   d.writeln('');
   d.writeln('      if (i+1 == '+number_of_games+')');
   d.writeln('      {');
   d.writeln('         for (var j = 1; j <= '+max_no_of_games+'-'+number_of_games+'; j++)');
   d.writeln('         {');
   d.writeln('            // Must put one blank before "\\n" so that the blank lines get generated properly.');
   d.writeln('');
   d.writeln('            mail_msg += escape(" \\n");');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      mail_msg += escape(  picks[i] + " ");');
   d.writeln('      mail_msg += escape(weights[i] + "\\n");');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   mail_msg += escape("pts: " + mn_points);');
   d.writeln('');
   d.writeln('   if (picks_from_odds_button_pressed == true)');
   d.writeln('   {');
   d.writeln('      mail_msg += escape("\\n\\nThese picks were generated from the NFL Odds.");');
   d.writeln('   }');
   d.writeln('   else if (random_picks_button_pressed == true)');
   d.writeln('   {');
   d.writeln('      mail_msg += escape("\\n\\n"+random_picks_generated+" of these picks were randomly generated.");');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // If we are running on an iPad or iPhone create the mail message using a new temporary window.');
   d.writeln('');
   d.writeln('   if (navigator.platform.substring(0,2) == "iP")');
   d.writeln('   {');
   d.writeln('      temp_window = window.open(mail_msg,"","top=0,left=0,width=100,height=100");');
   d.writeln('');
   d.writeln('      setTimeout(function(){temp_window.close()},1000);');
   d.writeln('   }');
   d.writeln('   else');
   d.writeln('   {');
   d.writeln('      document.location.href = mail_msg;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   return true;');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function format_picks_for_dialog(document,display_game_prefix,requested_game)');
   d.writeln('{');
   d.writeln('   var formatted_picks = "";');
   d.writeln('   var game_number     = 0;');
   d.writeln('   var game_prefix     = "";');
   d.writeln('   var highest_game    = '+number_of_games+';');
   d.writeln('   var losing_team     = "";');
   d.writeln('   var lowest_game     = 1;');
   d.writeln('   var pick            = "";');
   d.writeln('   var weight          = "";');
   d.writeln('   var winning_team    = "";');
   d.writeln('');
   d.writeln('');
   d.writeln('   if ((requested_game > 0) && (requested_game <= '+number_of_games+'))');
   d.writeln('   {');
   d.writeln('      lowest_game  = requested_game;');
   d.writeln('      highest_game = requested_game;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Write lines for all games that have a weight assigned.');
   d.writeln('');
   d.writeln('   for (var i = '+max_no_of_games+'; i > '+max_no_of_games+'-'+number_of_games+'; i--)');
   d.writeln('   {');
   d.writeln('      for (var j = (lowest_game-1); j <= (highest_game-1); j++)');
   d.writeln('      {');
   d.writeln('         if (weights[j] == i)');
   d.writeln('         {');
   d.writeln('            if (picks[j] == "H")');
   d.writeln('            {');
   d.writeln('               winning_team = pad_text_string(home_teams[j]+" "+spreads[j]);');
   d.writeln('               losing_team  = pad_text_string(visiting_teams[j]);');
   d.writeln('            }');
   d.writeln('            else');
   d.writeln('            {');
   d.writeln('               winning_team = pad_text_string(visiting_teams[j]+" "+spreads[j]);');
   d.writeln('               losing_team  = pad_text_string(home_teams[j]);');
   d.writeln('            }');
   d.writeln('');
   d.writeln('            if (display_game_prefix == true)');
   d.writeln('            {');
   d.writeln('               game_number = j+1;');
   d.writeln('');
   d.writeln('               if (game_number < 10) game_number = " " + game_number');
   d.writeln('');
   d.writeln('               game_prefix = "Game " + game_number + ":   ";');
   d.writeln('            }');
   d.writeln('');
   d.writeln('            formatted_picks = formatted_picks + game_prefix + winning_team;');
   d.writeln('');
   d.writeln('            if (picks[j] == 0)');
   d.writeln('            {');
   d.writeln('               formatted_picks = formatted_picks + "at     ";');
   d.writeln('            }');
   d.writeln('            else');
   d.writeln('            {');
   d.writeln('               formatted_picks = formatted_picks + "over   ";');
   d.writeln('            }');
   d.writeln('            formatted_picks = formatted_picks + losing_team;');
   d.writeln('');
   d.writeln('            if (weights[j] < 10)');
   d.writeln('            {');
   d.writeln('               weight = " " + weights[j];');
   d.writeln('            }');
   d.writeln('            else');
   d.writeln('            {');
   d.writeln('               weight = weights[j];');
   d.writeln('            }');
   d.writeln('');
   d.writeln('            if (picks[j] == 0)');
   d.writeln('            {');
   d.writeln('               pick = " ";');
   d.writeln('            }');
   d.writeln('            else');
   d.writeln('            {');
   d.writeln('               pick = picks[j];');
   d.writeln('            }');
   d.writeln('');
   d.writeln('            formatted_picks = formatted_picks + pick + " " + weight + "\\n";');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Write lines for all games that do not have a weight assigned but have a winner picked.');
   d.writeln('');
   d.writeln('   for (var j = (lowest_game-1); j <= (highest_game-1); j++)');
   d.writeln('   {');
   d.writeln('      if ( (weights[j] == 0) && (picks[j] != 0) )');
   d.writeln('      {');
   d.writeln('         if (picks[j] == "H")');
   d.writeln('         {');
   d.writeln('            winning_team = pad_text_string(home_teams[j]);');
   d.writeln('            losing_team  = pad_text_string(visiting_teams[j]);');
   d.writeln('         }');
   d.writeln('         else');
   d.writeln('         {');
   d.writeln('            winning_team = pad_text_string(visiting_teams[j]);');
   d.writeln('            losing_team  = pad_text_string(home_teams[j]);');
   d.writeln('         }');
   d.writeln('');
   d.writeln('         if (display_game_prefix == true)');
   d.writeln('         {');
   d.writeln('            game_number = j+1;');
   d.writeln('');
   d.writeln('            if (game_number < 10) game_number = " " + game_number');
   d.writeln('');
   d.writeln('            game_prefix = "Game " + game_number + ":   ";');
   d.writeln('         }');
   d.writeln('');
   d.writeln('         formatted_picks = formatted_picks + game_prefix + winning_team + "over   " + losing_team;');
   d.writeln('');
   d.writeln('         weight = "  " + "  ";');
   d.writeln('');
   d.writeln('         if (picks[j] == 0)');
   d.writeln('         {');
   d.writeln('            pick = "  ";');
   d.writeln('         }');
   d.writeln('         else');
   d.writeln('         {');
   d.writeln('            pick = picks[j];');
   d.writeln('         }');
   d.writeln('');
   d.writeln('         formatted_picks = formatted_picks + pick + " " + weight + "\\n";');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Write lines for all games that do not have a weight assigned and do not have a winner picked.');
   d.writeln('');
   d.writeln('   for (var j = (lowest_game-1); j <= (highest_game-1); j++)');
   d.writeln('   {');
   d.writeln('      if ( (weights[j] == 0) && (picks[j] == 0) )');
   d.writeln('      {');
   d.writeln('         winning_team = pad_text_string(visiting_teams[j]);');
   d.writeln('         losing_team  = pad_text_string(home_teams[j]);');
   d.writeln('');
   d.writeln('         if (display_game_prefix == true)');
   d.writeln('         {');
   d.writeln('            game_number = j+1;');
   d.writeln('');
   d.writeln('            if (game_number < 10) game_number = " " + game_number');
   d.writeln('');
   d.writeln('            game_prefix = "Game " + game_number + ":   ";');
   d.writeln('         }');
   d.writeln('');
   d.writeln('         formatted_picks = formatted_picks + game_prefix + winning_team + "at     " + losing_team;');
   d.writeln('');
   d.writeln('         weight = "  " + "  ";');
   d.writeln('');
   d.writeln('         if (picks[j] == 0)');
   d.writeln('         {');
   d.writeln('            pick = "  ";');
   d.writeln('         }');
   d.writeln('         else');
   d.writeln('         {');
   d.writeln('            pick = picks[j];');
   d.writeln('         }');
   d.writeln('');
   d.writeln('         formatted_picks = formatted_picks + pick + " " + weight + "\\n";');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   return formatted_picks;');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function generate_picks_from_odds(document)');
   d.writeln('{');
   d.writeln('   var exit_loop              = false;');
   d.writeln('   var index                  = 0;');
   d.writeln('   var index1                 = 0;');
   d.writeln('   var index2                 = 0;');
   d.writeln('   var nfl_connection         = null;');
   d.writeln('   var nfl_games_array        = new Array('+number_of_games+');');
   d.writeln('   var nfl_odds               = null;');
   d.writeln('   var nfl_odds_search_string = ["NFLLinesForWeek'+week+'-N","NFLLinesForWeek'+week+'-E"];');
   d.writeln('   var nfl_odds_url           = ["\\"http://www.footballlocks.com/nfl_lines.shtml\\"","\\"http://www.footballlocks.com/early_nfl_lines.shtml\\""];');
   d.writeln('   var nfl_team_cities        = ["Arizona",  "Atlanta","Baltimore","Buffalo","Carolina","Chicago","Cincinnati","Cleveland","Dallas", "Denver", "Detroit","Giants","Green Bay","Houston","Indianapolis","Jacksonville","Jets","Kansas City","Miami",   "Minnesota","New England","New Orleans","Oakland","Philadelphia","Philadephia","Pittsburgh","San Diego","San Francisco","Seattle", "Los Angeles","Tampa Bay", "Tennessee","Washington"];');
   d.writeln('   var nfl_team_names         = ["Cardinals","Falcons","Ravens",   "Bills",  "Panthers","Bears",  "Bengals",   "Browns",   "Cowboys","Broncos","Lions",  "Giants","Packers",  "Texans", "Colts",       "Jaguars",     "Jets","Chiefs",     "Dolphins","Vikings",  "Patriots",   "Saints",     "Raiders","Eagles",      "Eagles",     "Steelers",  "Chargers", "49ers",        "Seahawks","Rams",       "Buccaneers","Titans",   "Redskins"  ];');
   d.writeln('   var prompt_message         = "";');
   d.writeln('   var user_message           = "";');
   d.writeln('   var suffix                 = "";');
   d.writeln('   var temp_string            = "";');
   d.writeln('   var user_input             = "";');
   d.writeln('   var valid_mn_points        = true;');
   d.writeln('   var weight                 = 0;');
   d.writeln('');
   d.writeln('');
   d.writeln('   // Attempt to get the NFL Odds from the internet.');
   d.writeln('');
   d.writeln('   for (var i = 0; i < nfl_odds_url.length; i++)');
   d.writeln('   {');
   d.writeln('      nfl_connection = new XMLHttpRequest();');
   d.writeln('');
   d.writeln('      try');
   d.writeln('      {');
   d.writeln('         nfl_connection.open("GET",encodeURI("https://query.yahooapis.com/v1/public/yql?q=select * from html where url="+nfl_odds_url[i])+" and compat=\\"html5\\"",false);');
   d.writeln('         nfl_connection.send(null);');
   d.writeln('');
   d.writeln('         if (nfl_connection.readyState == 4)');
   d.writeln('         {');
   d.writeln('            nfl_odds = nfl_connection.responseText;');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('      catch(e)');
   d.writeln('      {');
   d.writeln('         if (i == nfl_odds_url.length-1)');
   d.writeln('         {');
   d.writeln('            alert("\\"Picks From Odds\\" failed.");');
   d.writeln('');
   d.writeln('            return false;');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      // Strip off as much of the ending of the nfl_odds html string as possible.');
   d.writeln('');
   d.writeln('      index = nfl_odds.indexOf("View This Season");');
   d.writeln('');
   d.writeln('      if (index != -1) nfl_odds = nfl_odds.substring(0,index);');
   d.writeln('');
   d.writeln('      // Remove unneeded information from the nfl_odds html string.');
   d.writeln('');
   d.writeln('      nfl_odds = nfl_odds.replace(/(At |NY )/gi,"");');         // Get rid of all "At " and "NY".
   d.writeln('      nfl_odds = nfl_odds.replace(/( |\xA0)/gi,"");');          // Get rid of all blank spaces and "&nbsp" (hex code = A0).
   d.writeln('      nfl_odds = nfl_odds.replace(/(\\r\\n|\\r|\\n)/gi,"");');  // Get rid of all line feeds.
   d.writeln('      nfl_odds = nfl_odds.replace(/(<p>|<\\/p>)/gi,"");');      // Get rid of all "<p>" and "</p>".
   d.writeln('      nfl_odds = nfl_odds.replace(/(<br>|<br\\/>)/gi,"");');    // Get rid of all "<br>" and "<br/>".
   d.writeln('');
   d.writeln('      // Determine if the NFL Odds for this input week are available.');
   d.writeln('');
   d.writeln('      index = nfl_odds.indexOf(nfl_odds_search_string[i]);');
   d.writeln('');
   d.writeln('      if (index == -1)');
   d.writeln('      {');
   d.writeln('         if (i == nfl_odds_url.length-1)');
   d.writeln('         {');
   d.writeln('            alert("NFL Odds for Week ' + week + ' are not available.")');
   d.writeln('');
   d.writeln('            return;');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('      else');
   d.writeln('      {');
   d.writeln('         if (i == nfl_odds_url.length-1)');
   d.writeln('         {');
   d.writeln('            index1 = nfl_odds.indexOf("EarlyWeek'+week+',2016NFLLinesAreNotYetPosted");');
   d.writeln('');
   d.writeln('            if (index1 != -1)');
   d.writeln('            {');
   d.writeln('               alert("NFL Odds for Week ' + week + ' are not available.")');
   d.writeln('');
   d.writeln('               return;');
   d.writeln('            }');
   d.writeln('         }');
   d.writeln('');
   d.writeln('         break;  // Break out of this loop and continue since we found the NFL Odds.');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Make sure the user name has been selected, if not return.');
   d.writeln('');
   d.writeln('   if (validate_name(document,false) == false)');
   d.writeln('   {');
   d.writeln('      alert("You must select your name before picks from odds can be generated.");');
   d.writeln('');
   d.writeln('      return false;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Display informational message to user.');
   d.writeln('');
   d.writeln('   user_message = "\\"Picks From Odds\\" will:\\n\\n";');
   d.writeln('   user_message = user_message + "   - Clear the picks and weights on the Input Form\\n";');
   d.writeln('   user_message = user_message + "   - Get the NFL Odds from the internet\\n";');
   d.writeln('   user_message = user_message + "   - Populate the Input Form based on the NFL Odds";');
   d.writeln('');
   d.writeln('   if (confirm(user_message) == false)');
   d.writeln('   {');
   d.writeln('      return false;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Set the picks_from_odds_button_pressed flag.');
   d.writeln('');
   d.writeln('   picks_from_odds_button_pressed = true;');
   d.writeln('');
   d.writeln('   // Clear out the spreads array.');
   d.writeln('');
   d.writeln('   clear_spreads_array();');
   d.writeln('');
   d.writeln('   // Clear out the picks and weights arrays and also the picks and weights on the Input Form.');
   d.writeln('');
   d.writeln('   for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('   {');
   d.writeln('      picks  [i] = "";');
   d.writeln('      weights[i] = "";');
   d.writeln('');
   d.writeln('      document.fp_inputs.elements["pick"  +(i+1)].value = 0;');
   d.writeln('      document.fp_inputs.elements["weight"+(i+1)].value = 0;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Strip off as much of the beginning of the nfl_odds html string as possible.');
   d.writeln('');
   d.writeln('   nfl_odds = nfl_odds.substring(index,nfl_odds.length);');
   d.writeln('');
   d.writeln('   // Remove the first occurrence of a table record in the nfl_odds html string which does not contain any game information.');
   d.writeln('');
   d.writeln('   nfl_odds = nfl_odds.replace(/<tr>/i,"");');
   d.writeln('   nfl_odds = nfl_odds.replace(/<\\/tr>/i,"");');
   d.writeln('');
   d.writeln('   // Extract the game information for each game out of the nfl_odds html string and put into the nfl_games_array.');
   d.writeln('');
   d.writeln('   for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('   {');
   d.writeln('      suffix = i + 10;');
   d.writeln('');
   d.writeln('      // Find the next table record in the nfl_odds html string and put it in nfl_games_array.');
   d.writeln('');
   d.writeln('      index1 = nfl_odds.indexOf("<tr>");');
   d.writeln('      index2 = nfl_odds.indexOf("<\\/tr>");');
   d.writeln('');
   d.writeln('      nfl_games_array[i] = nfl_odds.substring(index1,index2+5);');
   d.writeln('');
   d.writeln('      // If the table record does not contain any game information then skip over it.');
   d.writeln('');
   d.writeln('      if (nfl_games_array[i].indexOf("tdwidth") != -1)');
   d.writeln('      {');
   d.writeln('         nfl_odds = nfl_odds.replace(/<tr>/i,"");');
   d.writeln('         nfl_odds = nfl_odds.replace(/<\\/tr>/i,"");');
   d.writeln('');
   d.writeln('         index1 = nfl_odds.indexOf("<tr>");');
   d.writeln('         index2 = nfl_odds.indexOf("<\\/tr>");');
   d.writeln('');
   d.writeln('         nfl_games_array[i] = nfl_odds.substring(index1,index2+5);');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      //JL alert(":" + nfl_games_array[i] + ":");');
   d.writeln('');
   d.writeln('      // Clean up the information in nfl_games_array.');
   d.writeln('');
   d.writeln('      // This next section removes information that indicates a');
   d.writeln('      // game being played out of the country, e.g., "At London".');
   d.writeln('');
   d.writeln('      index1 = nfl_games_array[i].indexOf("<font");');
   d.writeln('      index2 = nfl_games_array[i].indexOf("font>");');
   d.writeln('');
   d.writeln('      if ( (index1 != -1) && (index2 > index1) )');
   d.writeln('      {');
   d.writeln('         temp_string = nfl_games_array[i].substring(index1,index2+5);');
   d.writeln('');
   d.writeln('         nfl_games_array[i] = nfl_games_array[i].replace(temp_string,"");');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      // If a game is even as indicated by a spread value of "PK", then remove the html span tags that surround "PK".');
   d.writeln('');
   d.writeln('      index = nfl_games_array[i].indexOf("PK");');
   d.writeln('');
   d.writeln('      if (index != -1)');
   d.writeln('      {');
   d.writeln('         index1 = nfl_games_array[i].indexOf("<span");');
   d.writeln('         index2 = nfl_games_array[i].indexOf("span>");');
   d.writeln('');
   d.writeln('         if ( (index1 != -1) && (index2 > index1) )');
   d.writeln('         {');
   d.writeln('            temp_string = nfl_games_array[i].substring(index1,index2+5);');
   d.writeln('');
   d.writeln('            nfl_games_array[i] = nfl_games_array[i].replace(temp_string,"PK");');
   d.writeln('         }');
   d.writeln('      }')
   d.writeln('');
   d.writeln('      //JL alert(":" + nfl_games_array[i] + ":");');
   d.writeln('');
   d.writeln('      // Remove the opening and closing table record html tags.');
   d.writeln('');
   d.writeln('      nfl_games_array[i] = nfl_games_array[i].replace(/<tr>/i,"");');
   d.writeln('      nfl_games_array[i] = nfl_games_array[i].replace(/<\\/tr>/i,"");');
   d.writeln('');
   d.writeln('      // Remove the first opening table data html tag.');
   d.writeln('');
   d.writeln('      nfl_games_array[i] = nfl_games_array[i].replace(/<td>/i,"");');
   d.writeln('');
   d.writeln('      // Remove unneeded information leading up to the next table data html tag.');
   d.writeln('');
   d.writeln('      index = nfl_games_array[i].indexOf("<td>");');
   d.writeln('');
   d.writeln('      nfl_games_array[i] = nfl_games_array[i].substring(index,nfl_games_array[i].length);');
   d.writeln('');
   d.writeln('      // Replace remaining opening and closing table data html tags with blanks.');
   d.writeln('');
   d.writeln('      nfl_games_array[i] = nfl_games_array[i].replace(/<td>/gi," ");');
   d.writeln('      nfl_games_array[i] = nfl_games_array[i].replace(/<\\/td>/gi," ");');
   d.writeln('');
   d.writeln('      // Remove leading and trailing blanks.');
   d.writeln('');
   d.writeln('      nfl_games_array[i] = nfl_games_array[i].trim();');
   d.writeln('');
   d.writeln('      // Convert consecutive blanks to a single blank.');
   d.writeln('');
   d.writeln('      nfl_games_array[i] = nfl_games_array[i].replace(/\\s+/g," ");');
   d.writeln('');
   d.writeln('      // Put the nfl game information from the nfl_games_array into a temp_string so');
   d.writeln('      // we can rearrange the information and then put it back into the nfl_games_array.');
   d.writeln('');
   d.writeln('      temp_string = nfl_games_array[i].split(" ");');
   d.writeln('');
   d.writeln('      // Determine the name of the team favored to win from its city.');
   d.writeln('');
   d.writeln('      for (var j = 0; j < nfl_team_cities.length; j++)');
   d.writeln('      {');
   d.writeln('         if (temp_string[0] == nfl_team_cities[j].replace(/ /g,""))');
   d.writeln('         {');
   d.writeln('            temp_string[0] = nfl_team_names[j];');
   d.writeln('');
   d.writeln('            break;');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      // Put the point spread in the first element in nfl_games_array (delimiter being used is a blank, i.e., " ").');
   d.writeln('');
   d.writeln('      if (isNaN(temp_string[1]) == true) temp_string[1] = 0;');
   d.writeln('');
   d.writeln('      nfl_games_array[i] = temp_string[1] + " ";');
   d.writeln('');
   d.writeln('      // Determine if the team favored to win is the home team or visiting');
   d.writeln('      // team and put an indicator in the second element in nfl_games_array.');
   d.writeln('');
   d.writeln('      exit_loop = false;');
   d.writeln('');
   d.writeln('      for (var j = 0; j < '+number_of_games+'; j++)');
   d.writeln('      {');
   d.writeln('         if (temp_string[0] == home_teams[j])');
   d.writeln('         {');
   d.writeln('            nfl_games_array[i] = nfl_games_array[i] + "H" + suffix + " ";');
   d.writeln('');
   d.writeln('            exit_loop = true;');
   d.writeln('         }');
   d.writeln('         else if (temp_string[0] == visiting_teams[j])');
   d.writeln('         {');
   d.writeln('            nfl_games_array[i] = nfl_games_array[i] + "V" + suffix + " ";');
   d.writeln('');
   d.writeln('            exit_loop = true;');
   d.writeln('         }');
   d.writeln('');
   d.writeln('         if (exit_loop == true)');
   d.writeln('         {');
   d.writeln('            if (j == '+number_of_games+'-1)');
   d.writeln('            {');
   d.writeln('               // This is the last game scheduled so use the total points for the Monday Night Points Prediction.');
   d.writeln('');
   d.writeln('               if (isNaN(temp_string[3]) == true)');
   d.writeln('               {');
   d.writeln('                  temp_string[3] = "";');
   d.writeln('               }');
   d.writeln('               else');
   d.writeln('               {');
   d.writeln('                  temp_string[3] = Math.floor(temp_string[3]);');
   d.writeln('               }');
   d.writeln('');
   d.writeln('               document.fp_inputs.mn_points.value = temp_string[3];');
   d.writeln('            }');
   d.writeln('');
   d.writeln('            break;');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      // Put the name of the team favored to win in the third element in nfl_games_array.');
   d.writeln('');
   d.writeln('      nfl_games_array[i] = nfl_games_array[i] + temp_string[0];');
   d.writeln('');
   d.writeln('      // Get rid of this table record in the nfl_odds html string so that the next');
   d.writeln('      // table record in it is found during the next iteration of this "for" loop.');
   d.writeln('');
   d.writeln('      nfl_odds = nfl_odds.replace(/<tr>/i,"");');
   d.writeln('      nfl_odds = nfl_odds.replace(/<\\/tr>/i,"");');
   d.writeln('');
   d.writeln('      //JL alert(":" + nfl_games_array[i] + ":");');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Convert each element of the nfl_games_array into an array itself and make');
   d.writeln('   // sure that the first element (which contains the spread value) is of type float.');
   d.writeln('');
   d.writeln('   for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('   {');
   d.writeln('      nfl_games_array[i]    = nfl_games_array[i].split(" ");');
   d.writeln('      nfl_games_array[i][0] = parseFloat(nfl_games_array[i][0]);');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Sort the nfl_games_array so that the team favored to win by the most is first, and so on.');
   d.writeln('');
   d.writeln('   nfl_games_array.sort(function(a,b) {if(a[0] == b[0]) {return a[1] < b[1] ? -1 : a[1] > b[1] ? 1 : 0;} return a[0] - b[0];});');
   d.writeln('');
   d.writeln('   // Populate picks and weights from the nfl_games_array.');
   d.writeln('');
   d.writeln('   weight = 16;');
   d.writeln('');
   d.writeln('   for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('   {');
   d.writeln('      exit_loop = false;');
   d.writeln('');
   d.writeln('      for (var j = 0; j < '+number_of_games+'; j++)');
   d.writeln('      {');
   d.writeln('         if (nfl_games_array[i][2] == home_teams[j])');
   d.writeln('         {');
   d.writeln('            picks[j] = "H";');
   d.writeln('');
   d.writeln('            exit_loop = true;');
   d.writeln('         }');
   d.writeln('         else if (nfl_games_array[i][2] == visiting_teams[j])');
   d.writeln('         {');
   d.writeln('            picks[j] = "V";');
   d.writeln('');
   d.writeln('            // If the spread is zero, force the home team to be the pick.');
   d.writeln('');
   d.writeln('            if (nfl_games_array[i][0] == 0) picks[j] = "H";');
   d.writeln('');
   d.writeln('            exit_loop = true;');
   d.writeln('         }');
   d.writeln('');
   d.writeln('         if (exit_loop == true)');
   d.writeln('         {');
   d.writeln('            weights[j] = weight; weight--;');
   d.writeln('');
   d.writeln('            if (nfl_games_array[i][0] == 0)');
   d.writeln('            {');
   d.writeln('               // The spread is zero so blank out the spread.');
   d.writeln('');
   d.writeln('               spreads[j] = "";');
   d.writeln('            }');
   d.writeln('            else');
   d.writeln('            {');
   d.writeln('               spreads[j] = nfl_games_array[i][0];');
   d.writeln('            }');
   d.writeln('');
   d.writeln('            break;');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Put the picks and weights on Input Form.');
   d.writeln('');
   d.writeln('   for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('   {');
   d.writeln('      document.fp_inputs.elements["pick"  +(i+1)].value = picks[i];');
   d.writeln('      document.fp_inputs.elements["weight"+(i+1)].value = weights[i];');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Validate Monday Night Points.');
   d.writeln('');
   d.writeln('   if (validate_monday_night_points(document.fp_inputs.mn_points,false) == false)');
   d.writeln('   {');
   d.writeln('      prompt_message = "\\"Picks From Odds\\" can\'t find Monday Night Total Points for \\""+visiting_teams['+number_of_games+'-1]+" at "+home_teams['+number_of_games+'-1]+".\\"  Enter a number between 1 and 99.\\n\\n";');
   d.writeln('');
   d.writeln('      while (user_input != null)');
   d.writeln('      {');
   d.writeln('         user_input = prompt(prompt_message,"");');
   d.writeln('');
   d.writeln('         if (user_input != null)');
   d.writeln('         {');
   d.writeln('            user_input = user_input.replace(/ /g,"");');  // Remove all blanks in user_input.
   d.writeln('');
   d.writeln('            document.fp_inputs.mn_points.value = user_input;');
   d.writeln('');
   d.writeln('            if (validate_monday_night_points(document.fp_inputs.mn_points,false) == true)');
   d.writeln('            {');
   d.writeln('               break;');
   d.writeln('            }');
   d.writeln('         }');
   d.writeln('         else');
   d.writeln('         {');
   d.writeln('            valid_mn_points = false;');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   if (valid_mn_points == true)');
   d.writeln('   {');
   d.writeln('      // Accept the picks (they will be validated).');
   d.writeln('');
   d.writeln('      accept_picks(document);');
   d.writeln('   }');
   d.writeln('   else');
   d.writeln('   {');
   d.writeln('      // Clear the picks_from_odds_button_pressed flag.');
   d.writeln('');
   d.writeln('      picks_from_odds_button_pressed = false;');
   d.writeln('');
   d.writeln('      // Clear out the spreads array.');
   d.writeln('');
   d.writeln('      clear_spreads_array();');
   d.writeln('   }');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function generate_random_picks(document)');
   d.writeln('{');
   d.writeln('   var counter          = 0;');
   d.writeln('   var from             = 0;');
   d.writeln('   var to               = 0;');
   d.writeln('   var random_weight    = 0;');
   d.writeln('   var user_messsage    = "";');
   d.writeln('   var weight_index     = 0;');
   d.writeln('   var weights_complete = false;');
   d.writeln('   var weights_used     = [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];');
   d.writeln('');
   d.writeln('');
   d.writeln('   // Make sure the user name has been selected, if not return.');
   d.writeln('');
   d.writeln('   if (validate_name(document,false) == false)');
   d.writeln('   {');
   d.writeln('      alert("You must select your name before random picks can be generated.");');
   d.writeln('');
   d.writeln('      return false;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Display informational message to user.');
   d.writeln('');
   d.writeln('   user_message = "\\"Random Picks\\" will:\\n\\n";');
   d.writeln('   user_message = user_message + "   - Validate all picks that you\'ve already entered\\n";');
   d.writeln('   user_message = user_message + "   - Generate random picks only for what you\'ve left blank";');
   d.writeln('');
   d.writeln('   if (confirm(user_message) == false)');
   d.writeln('   {');
   d.writeln('      return false;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Initialize variables.');
   d.writeln('');
   d.writeln('   random_mn_points_generated  = false;');
   d.writeln('   random_picks_button_pressed = true;');
   d.writeln('   random_picks_generated      = "All";');
   d.writeln('');
   d.writeln('   // Check to see if any weights (that have been selected already) have been used');
   d.writeln('   // more than once.  Any picks that have been selected already will be accepted as is.');
   d.writeln('');
   d.writeln('   if (validate_picks_and_weights(document,"initial_pass") == false)');
   d.writeln('   {');
   d.writeln('      random_picks_button_pressed = false;');
   d.writeln('');
   d.writeln('      return false;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Keep track of any weights that have been selected already.');
   d.writeln('');
   d.writeln('   counter = 0;');
   d.writeln('');
   d.writeln('   for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('   {');
   d.writeln('      if (weights[i] > 0)');
   d.writeln('      {');
   d.writeln('         weights_used[weights[i]-1] = true;');
   d.writeln('');
   d.writeln('         counter++;');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   if (counter == 0)                       random_picks_generated = "All";');
   d.writeln('   if (counter  > 0)                       random_picks_generated = "Some";');
   d.writeln('   if (counter  > '+number_of_games+' - 1) random_picks_generated = "None" ;');
   d.writeln('');
   d.writeln('   while (weights_complete == false)');
   d.writeln('   {');
   d.writeln('      // Adjust the range to be used for generating a random weight based on which weights have already been saved.');
   d.writeln('');
   d.writeln('      from = 16 - '+number_of_games+' + 1;');
   d.writeln('');
   d.writeln('      for (var j = (16 - '+number_of_games+' + 1); j <= 16; j++)');
   d.writeln('      {');
   d.writeln('         if (weights_used[j-1] == false)');
   d.writeln('         {');
   d.writeln('            from = j; break;');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      to = 16;');
   d.writeln('');
   d.writeln('      for (var j = 16; j > (16 - '+number_of_games+'); j--)');
   d.writeln('      {');
   d.writeln('         if (weights_used[j-1] == false)');
   d.writeln('         {');
   d.writeln('            to = j; break;');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      // Generate random weight');
   d.writeln('');
   d.writeln('      random_weight = Math.floor(Math.random() * (to - from + 1) + from);');
   d.writeln('');
   d.writeln('      // If the random weight has not been used already then save it, otherwise disregard it.');
   d.writeln('');
   d.writeln('      if (weights_used[random_weight-1] == false)');
   d.writeln('      {');
   d.writeln('         // Adjust weight_index if needed so we do not overwrite any weights that have selected already.');
   d.writeln('');
   d.writeln('         while (weights[weight_index] > 0)');
   d.writeln('         {');
   d.writeln('            weight_index++;');
   d.writeln('         }');
   d.writeln('');
   d.writeln('         // Save the random weight.');
   d.writeln('');
   d.writeln('         weights[weight_index] = random_weight;');
   d.writeln('');
   d.writeln('         // Increment the weight index for next time.');
   d.writeln('');
   d.writeln('         weight_index++;');
   d.writeln('');
   d.writeln('         // Set flag indicating the weight is used so it will not be used again.');
   d.writeln('');
   d.writeln('         weights_used[random_weight-1] = true;');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      // Assume that the weights list is complete until we can prove otherwise.');
   d.writeln('');
   d.writeln('      weights_complete = true;');
   d.writeln('');
   d.writeln('      // If the weights list is proved to be incomplete, generate another random weight (stay in the while loop).');
   d.writeln('');
   d.writeln('      for (var i = from; i <= 16; i++)');
   d.writeln('      {');
   d.writeln('         if (weights_used[i-1] == false) weights_complete = false;');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Generate random picks.');
   d.writeln('');
   d.writeln('   counter = 0;');
   d.writeln('');
   d.writeln('   for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('   {');
   d.writeln('      // Do not overwrite any picks that have been selected already.');
   d.writeln('');
   d.writeln('      if ( (picks[i] == "H") || (picks[i] == "V") )');
   d.writeln('      {');
   d.writeln('         counter++;');
   d.writeln('      }');
   d.writeln('      else');
   d.writeln('      {');
   d.writeln('         picks[i] = "H";');
   d.writeln('');
   d.writeln('         if (Math.floor(Math.random()*2) == 1) picks[i] = "V";  // Math.floor will return either 0 or 1.');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   if ( (counter == 0)                   && (random_picks_generated == "None") ) random_picks_generated = "Some";');
   d.writeln('   if ( (counter  > 0)                   && (counter < '+number_of_games+') )    random_picks_generated = "Some";');
   d.writeln('   if ( (counter == '+number_of_games+') && (random_picks_generated != "None") ) random_picks_generated = "Some";');
   d.writeln('');
   d.writeln('   // If valid Monday Night Total Points not already input, then randomly generate Monday Night Total Points.');
   d.writeln('');
   d.writeln('   if (validate_monday_night_points(document.fp_inputs.mn_points,false) == false)');
   d.writeln('   {');
   d.writeln('      document.fp_inputs.mn_points.value = Math.floor(Math.random() * (99 - 1 + 1) + 1);  // Math.floor will return a number from 1 to 99.');
   d.writeln('');
   d.writeln('      random_mn_points_generated  = true;');
   d.writeln('');
   d.writeln('      if (random_picks_generated == "None") random_picks_generated = "Some";');
   d.writeln('   }');
   d.writeln('   else');
   d.writeln('   {');
   d.writeln('      if (random_picks_generated == "All") random_picks_generated = "Some";');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   if (random_picks_generated == "None")');
   d.writeln('   {');
   d.writeln('      alert("Random picks weren\'t generated because no picks were left blank.");');
   d.writeln('   }');
   d.writeln('   else');
   d.writeln('   {');
   d.writeln('      display_confirmation_dialog(document);');
   d.writeln('   }');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function get_picks_and_weights_from_form(document)');
   d.writeln('{');
   d.writeln('   var inputs            = document.fp_inputs;');
   d.writeln('   var pick_index        = 0;');
   d.writeln('   var picks_select      = 0;');
   d.writeln('   var weight_index      = 0;');
   d.writeln('   var weights_select    = 0;');
   d.writeln('');
   d.writeln('');
   d.writeln('   picks_select_array   = new Array('+number_of_games+');');
   d.writeln('   weights_select_array = new Array('+number_of_games+');');
   d.writeln('');
   d.writeln('   // Assign picks and weights.');
   d.writeln('');
   d.writeln('   for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('   {');
   d.writeln('      picks  [i] = document.fp_inputs.elements["pick"  +(i+1)].value;');
   d.writeln('      weights[i] = document.fp_inputs.elements["weight"+(i+1)].value;');
   d.writeln('');
   d.writeln('      for (var j = 0; j < inputs.elements.length; j++)');
   d.writeln('      {');
   d.writeln('         if (inputs.elements[j].name == "pick"+(i+1))');
   d.writeln('         {');
   d.writeln('            picks_select_array[i] = inputs.elements[j];');
   d.writeln('         }');
   d.writeln('');
   d.writeln('         if (inputs.elements[j].name == "weight"+(i+1))');
   d.writeln('         {');
   d.writeln('            weights_select_array[i] = inputs.elements[j];');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   return true;');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function pad_text_string(input_string)');
   d.writeln('{');
   d.writeln('   var output_string   = "";');
   d.writeln('   var required_length = 13;');
   d.writeln('');
   d.writeln('');
   d.writeln('   output_string = input_string;');
   d.writeln('');
   d.writeln('   if (picks_from_odds_button_pressed == true) required_length = required_length + 6;');
   d.writeln('');
   d.writeln('   while (output_string.length < required_length)');
   d.writeln('   {');
   d.writeln('      output_string += " ";');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   return output_string;');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function validate_monday_night_points(mn_points,display_error)');
   d.writeln('{');
   d.writeln('   var monday_night_points = 0;');
   d.writeln('');
   d.writeln('');
   d.writeln('   monday_night_points = mn_points.value.replace(/\\./g,"_");');  // Force any value that includes a "." to fail.
   d.writeln('');
   d.writeln('   if ( (isNaN(monday_night_points) == true) || (monday_night_points < 1) || (monday_night_points > 99) )');
   d.writeln('   {');
   d.writeln('      if (display_error == true) alert("Enter a number between 1 and 99 for Monday Night Total Points.");');
   d.writeln('');
   d.writeln('      mn_points.value = "";');
   d.writeln('      mn_points.focus();');
   d.writeln('');
   d.writeln('      return false;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   mn_points.value = parseInt(monday_night_points);');  // Remove any leading zeros.
   d.writeln('');
   d.writeln('   return true;');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function validate_name(document,display_error)');
   d.writeln('{');
   d.writeln('   var name_menu  = document.fp_inputs.player_name_menu;');
   d.writeln('   var name_index = name_menu.selectedIndex;');
   d.writeln('');
   d.writeln('');
   d.writeln('   top.player_index = name_menu.options[name_index].value;');
   d.writeln('');
   d.writeln('   if (top.player_index == 0)');
   d.writeln('   {');
   d.writeln('      if (display_error == true) alert("Select your name before accepting your picks.");');
   d.writeln('');
   d.writeln('      name_menu.focus();');
   d.writeln('');
   d.writeln('      return false;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   return true;');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function validate_picks_and_weights(document,mode)');
   d.writeln('{');
   d.writeln('   var able_to_shift_weights_down            = false;');
   d.writeln('   var able_to_shift_weights_up              = false;');
   d.writeln('   var available_weights                     = "";');
   d.writeln('   var duplicate_weight                      = 0;');
   d.writeln('   var duplicate_weight_games                = "";');
   d.writeln('   var duplicate_weight_message              = "";');
   d.writeln('   var error_message                         = "";');
   d.writeln('   var inputs                                = document.fp_inputs;');
   d.writeln('   var last_specific_duplicate_weight_count  = 0;');
   d.writeln('   var losing_team                           = "";');
   d.writeln('   var number_of_different_duplicate_weights = 0;');
   d.writeln('   var okay_to_shift_weights                 = false;');
   d.writeln('   var specific_duplicate_weight_count       = 0;');
   d.writeln('   var weight_not_used                       = 0;');
   d.writeln('   var weight_shift_message                  = "";');
   d.writeln('   var willing_to_accept_help                = "";');
   d.writeln('   var winning_team                          = "";');
   d.writeln('');
   d.writeln('');
   d.writeln('   if (mode == "initial_pass")');
   d.writeln('   {');
   d.writeln('      duplicate_weight_game_1        = null;');
   d.writeln('      duplicate_weight_game_2        = null;');
   d.writeln('      game_to_retain_weight          = null;');
   d.writeln('      input_form_element_to_focus_on = null;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   get_picks_and_weights_from_form(document);');
   d.writeln('');
   d.writeln('   // Build string indicating which weights have not been used.');
   d.writeln('');
   d.writeln('   numbers = new Array('+number_of_games+');');
   d.writeln('');
   d.writeln('   for (var a = 0; a < numbers.length; a++)');
   d.writeln('   {');
   d.writeln('      numbers[a] = '+max_no_of_games+'-a;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   for (var b = 0; b < numbers.length; b++)');
   d.writeln('   {');
   d.writeln('      var match = false;');
   d.writeln('');
   d.writeln('      for (var c = 0; c < weights.length; c++)');
   d.writeln('      {');
   d.writeln('         if (numbers[b] == weights[c]) match = true;');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      if (match == false)');
   d.writeln('      {');
   d.writeln('         available_weights = " " + numbers[b] + available_weights;');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   if (available_weights != "") available_weights = available_weights.slice(1);');
   d.writeln('');
   d.writeln('   available_weights = "These weights have not been used:\\n\\n   " + available_weights;');
   d.writeln('');
   d.writeln('   // Only validate picks if the random picks button was NOT pressed.');
   d.writeln('');
   d.writeln('   if (random_picks_button_pressed == false)');
   d.writeln('   {');
   d.writeln('      // Alert the user if a game has been assigned a weight, but the winner has not been picked.');
   d.writeln('');
   d.writeln('      for (var i = '+max_no_of_games+'; i > '+max_no_of_games+'-'+number_of_games+'; i--)');
   d.writeln('      {');
   d.writeln('         for (var j = 0; j < '+number_of_games+'; j++)');
   d.writeln('         {');
   d.writeln('            if (weights[j] == i)');
   d.writeln('            {');
   d.writeln('               if (picks[j] == 0)');
   d.writeln('               {');
   d.writeln('                  error_message  = "Please pick a winner (V or H) for:\\n\\n";');
   d.writeln('                  error_message += "   \\""+visiting_teams[j]+" at "+home_teams[j]+"\\" (Game "+(j+1)+")\\n\\n\\n";');
   d.writeln('                  error_message += "Preview of picks so far:\\n\\n";');
   d.writeln('                  error_message += format_picks_for_dialog(document,true,0);');
   d.writeln('');
   d.writeln('                  input_form_element_to_focus_on = picks_select_array[j];');
   d.writeln('');
   d.writeln('                  display_picks_message(error_message,"missing_picks");');
   d.writeln('');
   d.writeln('                  return false;');
   d.writeln('               }');
   d.writeln('            }');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      // Alert the user if a game has not been assigned a weight and a winner has not been picked.');
   d.writeln('');
   d.writeln('      for (var j = 0; j < '+number_of_games+'; j++)');
   d.writeln('      {');
   d.writeln('         if (weights[j] == 0)');
   d.writeln('         {');
   d.writeln('            if (picks[j] == 0)');
   d.writeln('            {');
   d.writeln('               error_message  = "Please pick a winner (V or H) for:\\n\\n";');
   d.writeln('               error_message += "   \\""+visiting_teams[j]+" at "+home_teams[j]+"\\" (Game "+(j+1)+")\\n\\n\\n";');
   d.writeln('               error_message += "Preview of picks so far:\\n\\n";');
   d.writeln('               error_message += format_picks_for_dialog(document,true,0);');
   d.writeln('');
   d.writeln('               input_form_element_to_focus_on = picks_select_array[j];');
   d.writeln('');
   d.writeln('               display_picks_message(error_message,"missing_picks");');
   d.writeln('');
   d.writeln('               return false;');
   d.writeln('            }');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      // Alert the user if a winner has been picked for a game, but a weight has not been assigned.');
   d.writeln('');
   d.writeln('      for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('      {');
   d.writeln('         if (weights[i] == 0)');
   d.writeln('         {');
   d.writeln('            if (picks[i] == "H")');
   d.writeln('            {');
   d.writeln('               winning_team = home_teams[i];');
   d.writeln('               losing_team  = visiting_teams[i];');
   d.writeln('            }');
   d.writeln('            if (picks[i] == "V")');
   d.writeln('            {');
   d.writeln('               winning_team = visiting_teams[i];');
   d.writeln('               losing_team  = home_teams[i];');
   d.writeln('            }');
   d.writeln('');
   d.writeln('            error_message  = "Please assign a weight to:\\n\\n";');
   d.writeln('            error_message += "   \\""+winning_team+" over "+losing_team+"\\" (Game "+(i+1)+")\\n\\n";');
   d.writeln('            error_message += available_weights+"\\n\\n\\n";');
   d.writeln('            error_message += "Preview of picks so far:\\n\\n";');
   d.writeln('            error_message += format_picks_for_dialog(document,true,0);');
   d.writeln('');
   d.writeln('            input_form_element_to_focus_on = weights_select_array[i];');
   d.writeln('');
   d.writeln('            display_picks_message(error_message,"missing_weights");');
   d.writeln('');
   d.writeln('            return false;');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Determine if the same weight has been assigned to at least two games (duplicate weight).');
   d.writeln('');
   d.writeln('   for (var i = '+max_no_of_games+'; i > '+max_no_of_games+'-'+number_of_games+'; i--)');
   d.writeln('   {');
   d.writeln('      duplicate_weight_games          = "";');
   d.writeln('      specific_duplicate_weight_count = 0;');
   d.writeln('');
   d.writeln('      for (var j = 0; j < '+number_of_games+'; j++)');
   d.writeln('      {');
   d.writeln('         if (weights[j] == i)');
   d.writeln('         {');
   d.writeln('            specific_duplicate_weight_count++;');
   d.writeln('');
   d.writeln('            duplicate_weight_games = duplicate_weight_games + format_picks_for_dialog(document,true,(j+1));');
   d.writeln('');
   d.writeln('            if (specific_duplicate_weight_count == 2)');
   d.writeln('            {');
   d.writeln('               duplicate_weight = i;');
   d.writeln('');
   d.writeln('               number_of_different_duplicate_weights++;');
   d.writeln('            }');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      if (specific_duplicate_weight_count > 1)');
   d.writeln('      {'); 
   d.writeln('         duplicate_weight_games = "Weight \\"" + i + "\\" has been used " + specific_duplicate_weight_count + " times:\\n\\n" + ');
   d.writeln('                                  duplicate_weight_games;');
   d.writeln('');
   d.writeln('         if (duplicate_weight_message == "")');
   d.writeln('         {');
   d.writeln('            duplicate_weight_message = duplicate_weight_message + duplicate_weight_games');
   d.writeln('         }');
   d.writeln('         else');
   d.writeln('         {');
   d.writeln('            duplicate_weight_message = duplicate_weight_message + "\\n" + duplicate_weight_games');
   d.writeln('         }');
   d.writeln('');
   d.writeln('         last_specific_duplicate_weight_count = specific_duplicate_weight_count;');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      if (specific_duplicate_weight_count == 0)');
   d.writeln('      {');
   d.writeln('         weight_not_used = i;');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // If there is at least one duplicate weight and the random picks button was pressed, stop here and return.');
   d.writeln('');
   d.writeln('   if ( (number_of_different_duplicate_weights > 0) && (random_picks_button_pressed == true) )');
   d.writeln('   {');
   d.writeln('      display_picks_message(duplicate_weight_message,"duplicate_weights");');
   d.writeln('');
   d.writeln('      return false;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   duplicate_weight_message = duplicate_weight_message + "\\n\\nEach weight can only be used once.\\n\\n" + available_weights;');
   d.writeln('');
   d.writeln('   // If there are no duplicate weights, then the picks and weights are good to go, so return true.');
   d.writeln('');
   d.writeln('   if (number_of_different_duplicate_weights == 0)');
   d.writeln('   {');
   d.writeln('      return true;');
   d.writeln('   } ');
   d.writeln('');
   d.writeln('   // Alert the user if there is more than one instance of a duplicate weight or if a weight has been used 3 times or more.');
   d.writeln('');
   d.writeln('   if (number_of_different_duplicate_weights > 1)');
   d.writeln('   {');
   d.writeln('      display_picks_message(duplicate_weight_message,"duplicate_weights");');
   d.writeln('      return false;');
   d.writeln('   }');
   d.writeln('   else');
   d.writeln('   {');
   d.writeln('      if (last_specific_duplicate_weight_count > 2)');
   d.writeln('      {');
   d.writeln('         display_picks_message(duplicate_weight_message,"duplicate_weights");');
   d.writeln('         return false;');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // If we get here, it means that there is only one instance of a duplicate weight');
   d.writeln('   // and the duplicate weight was only used twice, so suggest a fix to the user.');
   d.writeln('');
   d.writeln('   if (weight_not_used > duplicate_weight)');
   d.writeln('   {');
   d.writeln('      able_to_shift_weights_up = true;');
   d.writeln('');
   d.writeln('      if (weight_not_used - duplicate_weight == 1)');
   d.writeln('      {');
   d.writeln('         weight_shift_message = "The other weight of " + duplicate_weight + " will be adjusted up by one.";');
   d.writeln('      }');
   d.writeln('      else');
   d.writeln('      {');
   d.writeln('         weight_shift_message = "All other weights from " + duplicate_weight + " to " + (weight_not_used-1) + " will be adjusted up by one.";');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   if (weight_not_used < duplicate_weight)');
   d.writeln('   {');
   d.writeln('      able_to_shift_weights_down = true;');
   d.writeln('');
   d.writeln('      if (duplicate_weight - weight_not_used == 1)');
   d.writeln('      {');
   d.writeln('         weight_shift_message = "The other weight of " + duplicate_weight + " will be adjusted down by one.";');
   d.writeln('      }');
   d.writeln('      else');
   d.writeln('      {');
   d.writeln('         weight_shift_message = "All other weights from " + (weight_not_used+1) + " to " + duplicate_weight + " will be adjusted down by one.";');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   winning_team  = "";');
   d.writeln('   losing_team   = "";');
   d.writeln('   winning_team2 = "";');
   d.writeln('   losing_team2  = "";');
   d.writeln('');
   d.writeln('   for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('   {');
   d.writeln('      if (weights[i] == duplicate_weight)');
   d.writeln('      {');
   d.writeln('         if (winning_team == "")');
   d.writeln('         {');
   d.writeln('            duplicate_weight_game_1 = i');
   d.writeln('');
   d.writeln('            if (picks[i] == "H")');
   d.writeln('            {');
   d.writeln('               winning_team = home_teams[i];');
   d.writeln('               losing_team  = visiting_teams[i];');
   d.writeln('            }');
   d.writeln('            if (picks[i] == "V")');
   d.writeln('            {');
   d.writeln('               winning_team = visiting_teams[i];');
   d.writeln('               losing_team  = home_teams[i];');
   d.writeln('            }');
   d.writeln('         }');
   d.writeln('         else');
   d.writeln('         {');
   d.writeln('            duplicate_weight_game_2 = i');
   d.writeln('');
   d.writeln('            if (picks[i] == "H")');
   d.writeln('            {');
   d.writeln('               winning_team2 = home_teams[i];');
   d.writeln('               losing_team2  = visiting_teams[i];');
   d.writeln('            }');
   d.writeln('            if (picks[i] == "V")');
   d.writeln('            {');
   d.writeln('               winning_team2 = visiting_teams[i];');
   d.writeln('               losing_team2  = home_teams[i];');
   d.writeln('            }');
   d.writeln('');
   d.writeln('            break;');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   if (mode == "initial_pass")');
   d.writeln('   {');
   d.writeln('      error_message  = "Weight \\"" + duplicate_weight + "\\" has been used twice.\\n\\n";');
   d.writeln('      error_message += "Weight \\"" + weight_not_used  + "\\" has not been used.\\n\\n\\n";');
   d.writeln('      error_message += "Preview of picks so far:\\n\\n" + format_picks_for_dialog(document,true,0) + "\\n\\n";');
   d.writeln('      error_message += "Fix 1 - Keep \\"" + duplicate_weight + "\\" assigned to \\"";');
   d.writeln('      error_message += winning_team + " over " + losing_team + "\\" (Game " + (duplicate_weight_game_1+1) + ").\\n";');
   d.writeln('      error_message += "Fix 2 - Keep \\"" + duplicate_weight + "\\" assigned to \\"";');
   d.writeln('      error_message += winning_team2 + " over " + losing_team2 + "\\" (Game "+(duplicate_weight_game_2+1)+").\\n\\n";');
   d.writeln('      error_message += "        " + weight_shift_message + "\\n\\n\\n";');
   d.writeln('      error_message += "Go Back - Return to Input Form.";');
   d.writeln('');
   d.writeln('      display_picks_message(error_message,"one_duplicate_weight");');
   d.writeln('   }');
   d.writeln('   else if (mode == "auto_fix")');
   d.writeln('   {');
   d.writeln('      if (able_to_shift_weights_up == true)');
   d.writeln('      {');
   d.writeln('         for (var ii = 0; ii < '+number_of_games+'; ii++)');
   d.writeln('         {');
   d.writeln('            if ( ((weights[ii]-0) >= (duplicate_weight-0)) && ((weights[ii]-0) < (weight_not_used-0)) )');
   d.writeln('            {');
   d.writeln('               if (ii != game_to_retain_weight)');
   d.writeln('               {');
   d.writeln('                  weights[ii] = weights[ii]-0+1;');
   d.writeln('');
   d.writeln('                  for (var jj = 0; jj < inputs.elements.length; jj++)');
   d.writeln('                  {');
   d.writeln('                     if (inputs.elements[jj].name == "weight"+(ii+1))');
   d.writeln('                     {');
   d.writeln('                        weights_select               = inputs.elements[jj];');
   d.writeln('                        weights_select.selectedIndex = weights_select.selectedIndex + 1;');
   d.writeln('                     }');
   d.writeln('                  }');
   d.writeln('               }');
   d.writeln('            }');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      if (able_to_shift_weights_down == true)');
   d.writeln('      {');
   d.writeln('         for (var ii = 0; ii < '+number_of_games+'; ii++)');
   d.writeln('         {');
   d.writeln('            if ( ((weights[ii]-0) <= (duplicate_weight-0)) && ((weights[ii]-0) > (weight_not_used-0)) )');
   d.writeln('            {');
   d.writeln('               if (ii != game_to_retain_weight)');
   d.writeln('               {');
   d.writeln('                  weights[ii] = weights[ii]-1;');
   d.writeln('');
   d.writeln('                  for (var jj = 0; jj < inputs.elements.length; jj++)');
   d.writeln('                  {');
   d.writeln('                     if (inputs.elements[jj].name == "weight"+(ii+1))');
   d.writeln('                     {');
   d.writeln('                        weights_select               = inputs.elements[jj];');
   d.writeln('                        weights_select.selectedIndex = weights_select.selectedIndex - 1;');
   d.writeln('                     }');
   d.writeln('                  }');
   d.writeln('               }');
   d.writeln('            }');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   return false;');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('</' + 'script>');
   d.writeln('');
   d.writeln('');

   d.writeln('<center>');
   d.writeln('');

   d.writeln('<br>');
   d.writeln('');

   d.writeln('<form name="fp_inputs">');
   d.writeln('');

   d.writeln('<table border=0 cellspacing=0 cellpadding=0>');
   d.writeln('<tr align=center valign=center>');
   d.writeln('<td nowrap class="no_border"><font style="font-size: 18pt">Input Form - Week&nbsp;</font>');
   d.writeln('   <select class="light_gray_background" style="vertical-align: center; font-family: Calibri; font-size: 14pt; border: 1px solid gray" name="selected_week_menu" size=1 onChange="change_week(document); return true;">');
   for (var i = current_input_week; i <= 17; i++)
   {
      if (i == week)
      {
         d.writeln('      <option selected value="'+i+'">'+i+'');
      }
      else
      {
         d.writeln('      <option          value="'+i+'">'+i+'');
      }
   }
   d.writeln('</select></td>');
   d.writeln('</tr>');
   d.writeln('</table><p>');
   d.writeln('');
   d.writeln('');

   d.writeln('<table   align=center');
   d.writeln('         class="b3_border"');
   d.writeln('        border=0');
   d.writeln('       bgcolor=white');
   d.writeln('   cellspacing=0');
   d.writeln('   cellpadding=3>');
   d.writeln('');

   d.writeln('<tr VALIGN=CENTER bgcolor=#C4D79B>');
   d.writeln('<td ALIGN=RIGHT class="bb2_border" colspan=2><font style="font-size: 12pt"><b>NAME:</b></font></td>');
   d.writeln('<td VALIGN=LEFT class="bb2_border" colspan=4>');
   d.writeln('<select style="font-size: 12pt; font-family: Calibri; background-color:#C4D79B; border: 1px solid gray" name="player_name_menu" size=1>');
   for (var i = 0; i <= top.number_of_rs_players; i++)
   {
      switch (i)
      {
         case top.player_index:
            d.writeln('   <option selected value="'+i+'">'+build_player_name(i));
            break;
         default:
            d.writeln('   <option          value="'+i+'">'+build_player_name(i));
            break;
      }
   }
   d.writeln('</select>');
   d.writeln('</td>');
   d.writeln('</tr>');
   d.writeln('');

   d.writeln('<tr ALIGN=CENTER bgcolor=#DCE6F1>');
   d.writeln('<td class="br2_bb2_border"><font style="font-size: 12pt"><b>GAME</b></font></td>');
   d.writeln('<td class="bb2_border"><font style="font-size: 12pt"><b>VISITOR</b></font></td>');
   d.writeln('<td class="bb2_border"><font style="font-size: 12pt"><br></font></td>');
   d.writeln('<td class="br2_bb2_border"><font style="font-size: 12pt"><b>HOME</b></font></td>');
   d.writeln('<td class="bb2_gr1_border"><font style="font-size: 12pt"><b>PICK</b></font></td>');
   d.writeln('<td class="bb2_border"><font style="font-size: 12pt"><b>WEIGHT</b></font></td>');
   d.writeln('</tr>');
   d.writeln('');

   for (var i = 1; i <= number_of_games; i++)
   {
      d.writeln('<tr align=center>');
      if (i == number_of_games)
      {
         d.writeln('<td class="br2_border"><font style="font-size: 12pt"><b>' + i + '</b></font></td>');
         d.writeln('<td class="gr1_border"><font style="font-size: 12pt">' + visiting_teams[i-1] + '</font></td>');
         d.writeln('<td class="gr1_border"><font style="font-size: 12pt">at</font></td>');
         d.writeln('<td class="br2_border"><font style="font-size: 12pt">' + home_teams[i-1] + '</font></td>');
         d.writeln('<td class="gr1_border"><select style="font-size: 11pt; font-family: Calibri; border: 1px solid lightgray" name="pick'+i+'" size=1>');
      }
      else
      {
         d.writeln('<td class="br2_gb1_border"><font style="font-size: 12pt"><b>' + i + '</b></font></td>');
         d.writeln('<td><font style="font-size: 12pt">' + visiting_teams[i-1] + '</font></td>');
         d.writeln('<td><font style="font-size: 12pt">at</font></td>');
         d.writeln('<td class="br2_gb1_border"><font style="font-size: 12pt">' + home_teams[i-1] + '</font></td>');
         d.writeln('<td><select style="font-size: 11pt; font-family: Calibri; border: 1px solid lightgray" name="pick'+i+'" size=1>');
      }
      d.writeln('       <option selected value="0">');
      d.writeln('       <option          value="H">H');
      d.writeln('       <option          value="V">V');
      d.writeln('    </select></td>');
      if (i == number_of_games)
      {
         d.writeln('<td class="no_border"><select style="font-size: 11pt; font-family: Calibri; border: 1px solid lightgray" name="weight'+i+'" size=1>');
      }
      else
      {
         d.writeln('<td class="gb1_border"><select style="font-size: 11pt; font-family: Calibri; border: 1px solid lightgray" name="weight'+i+'" size=1>');
      }
      d.writeln('       <option selected value="0">');
      for (var j = 1; j <= number_of_games; j++)
      {
         var current_weight = max_no_of_games-number_of_games+j;

         d.writeln('       <option          value="'+current_weight+'">'+current_weight);
      }
      d.writeln('</select></td>');  
      d.writeln('</tr>');  
      d.writeln('');    
   }

   d.writeln('<tr align=center>');
   d.writeln('<td class="bt2_border" align=right colspan="5"><font style="font-size: 12pt">Monday Night Total Points:</font></td>');
   d.writeln('<td class="bt2_border" colspan="1">');
   d.writeln('<input type=text size="2" style="text-align:center; font-size: 11pt; font-family: Calibri; border: 1px solid gray" maxlength="2" name="mn_points">');
   d.writeln('</td>');
   d.writeln('</tr>');
   d.writeln('');

   d.writeln('<tr align=center bgcolor=#DCE6F1>');
   d.writeln('<td class="bt2_border" colspan="6"><font style="font-size: 12pt"><b>Open Date:</b>&nbsp;&nbsp;'+open_date+'</font></td>');
   d.writeln('</tr>');
   d.writeln('');

   d.writeln('</table>');
   d.writeln('');

   d.writeln('<table cols=1 align=center>');
   d.writeln('');

   d.writeln('<tr><td class="no_border" style="font-size: 2pt">&nbsp;</td></tr>');
   d.writeln('');

   d.writeln('<tr align=center>');
   d.writeln('<td class="no_border">');
   d.writeln('<input type=button style="font-size: 11pt; font-family: Calibri; border: 1px solid black" name="random_picks" value="Random Picks" onClick="generate_random_picks(document); return true;">');
   d.writeln('&nbsp;&nbsp;&nbsp;');
   d.writeln('<input type=button style="font-size: 11pt; font-family: Calibri; border: 1px solid black" name="picks_from_odds" value="Picks From Odds" onClick="generate_picks_from_odds(document); return true;">');
   d.writeln('</td>');
   d.writeln('</tr>');
   d.writeln('<tr><td class="no_border" style="font-size: 2pt">&nbsp;</td></tr>');
   d.writeln('<tr align=center>');
   d.writeln('<td class="no_border">');
   d.writeln('<input type=button style="font-size: 11pt; font-family: Calibri; border: 1px solid black" name="submit" value="Accept" onClick="accept_picks(document); return true;">');
   d.writeln('&nbsp;&nbsp;&nbsp;');
   d.writeln('<input type=button style="font-size: 11pt; font-family: Calibri; border: 1px solid black" name="reset_button" value="Reset" onClick="document.fp_inputs.reset(); document.fp_inputs.player_name_menu.value = 0; document.fp_inputs.pick1.focus(); return true;">');
   d.writeln('</td>');
   d.writeln('</tr>');
   d.writeln('');

   d.writeln('</table>');
   d.writeln('');

   d.writeln('</form>');
   d.writeln('');

   d.writeln('</center>');
   d.writeln('');

   d.writeln('<script language="JavaScript" type="text/javascript">document.fp_inputs.pick1.focus();<'+'/script>');
   d.writeln('');

   d.writeln('</body>');
   d.writeln('');

   d.writeln('</html>');

   d.close();

   return true;
}


function build_post_season_form()
{
   var home_teams      = top.post_season_home_teams;
   var number_of_games = home_teams.length;
   var visiting_teams  = top.post_season_visiting_teams;
   var week            = top.current_input_week - 17;   


   if (week < 1) week = 1;

   document.open();

   var d = document;

   d.writeln('<html>');
   d.writeln('');

   d.writeln('<head>');
   d.writeln('   <title>NFL Football Pool</title>');
   d.writeln('   <link href="fp.css" rel="stylesheet" type="text/css">');
   d.writeln('   <style type="text/css">');
   d.writeln('   <!--');
   d.writeln('      TD              {border-style:        solid;');
   d.writeln('                       border-color:    lightgray;');
   d.writeln('                       border-top-width:      0px;');
   d.writeln('                       border-right-width:    1px;');
   d.writeln('                       border-bottom-width:   1px;');
   d.writeln('                       border-left-width:     0px}');
   d.writeln('      .no_border      {border-style:        solid;');
   d.writeln('                       border-top-width:      0px;');
   d.writeln('                       border-right-width:    0px;');
   d.writeln('                       border-bottom-width:   0px;');
   d.writeln('                       border-left-width:     0px}');
   d.writeln('      .b3_border      {border: 3px solid    black}');
   d.writeln('      .bb2_border     {border-style:        solid;');
   d.writeln('                       border-color:        black;');
   d.writeln('                       border-top-width:      0px;');
   d.writeln('                       border-right-width:    0px;');
   d.writeln('                       border-bottom-width:   2px;');
   d.writeln('                       border-left-width:     0px}');
   d.writeln('      .br2_border     {border-style:        solid;');
   d.writeln('                       border-color:        black;');
   d.writeln('                       border-top-width:      0px;');
   d.writeln('                       border-right-width:    2px;');
   d.writeln('                       border-bottom-width:   0px;');
   d.writeln('                       border-left-width:     0px}');
   d.writeln('      .br2_bb2_border {border-style:        solid;');
   d.writeln('                       border-color: white black black white;');
   d.writeln('                       border-top-width:      0px;');
   d.writeln('                       border-right-width:    2px;');
   d.writeln('                       border-bottom-width:   2px;');
   d.writeln('                       border-left-width:     0px}');
   d.writeln('      .br2_gb1_border {border-style:        solid;');
   d.writeln('                       border-color: white black lightgray white;');
   d.writeln('                       border-top-width:      0px;');
   d.writeln('                       border-right-width:    2px;');
   d.writeln('                       border-bottom-width:   1px;');
   d.writeln('                       border-left-width:     0px}');
   d.writeln('      .gr1_border     {border-style:        solid;');
   d.writeln('                       border-color:    lightgray;');
   d.writeln('                       border-top-width:      0px;');
   d.writeln('                       border-right-width:    1px;');
   d.writeln('                       border-bottom-width:   0px;');
   d.writeln('                       border-left-width:     0px}');
   d.writeln('      .gb1_border     {border-style:        solid;');
   d.writeln('                       border-color:    lightgray;');
   d.writeln('                       border-top-width:      0px;');
   d.writeln('                       border-right-width:    0px;');
   d.writeln('                       border-bottom-width:   1px;');
   d.writeln('                       border-left-width:     0px}');
   d.writeln('      .gr1_bb2_border {border-style:        solid;');
   d.writeln('                       border-color: white lightgray black white;');
   d.writeln('                       border-top-width:      0px;');
   d.writeln('                       border-right-width:    1px;');
   d.writeln('                       border-bottom-width:   2px;');
   d.writeln('                       border-left-width:     0px}');
   d.writeln('   -->');
   d.writeln('   </style>');
   d.writeln('</head>');
   d.writeln('');

   d.writeln('<body class="light_gray_background"');
   d.writeln('<     style="border: 0px solid black;');  //JL - Should be 1px, but FireFox has a bug.
   d.writeln('              color: black;');
   d.writeln('        font-family: Calibri;">');
   d.writeln('');
   d.writeln('');

   d.writeln('<script language="JavaScript" type="text/javascript">');
   d.writeln('');

   d.writeln('// Define current week visiting teams.');
   d.writeln('');
   d.writeln('var visiting_teams = top.post_season_visiting_teams;');
   d.writeln('');
   d.writeln('');
   d.writeln('// Define current week home teams.');
   d.writeln('');
   d.writeln('var home_teams = top.post_season_home_teams;');
   d.writeln('');
   d.writeln('');
   d.writeln('// Define an array for the selected picks.');
   d.writeln('');
   d.writeln('picks = new Array ('+number_of_games+');');
   d.writeln('');
   d.writeln('');
   d.writeln('// Define arrays for the predicted margins of victory.');
   d.writeln('');
   d.writeln('spread_elements = new Array ('+number_of_games+');');
   d.writeln('spread_values   = new Array ('+number_of_games+');');
   d.writeln('');
   d.writeln('');
   d.writeln('// Define a variable for the total points prediction.');
   d.writeln('');
   d.writeln('total_points = 0;');
   d.writeln('');
   d.writeln('');
   d.writeln('// Define variables for the picks from odds function.');
   d.writeln('');
   d.writeln('var picks_from_odds_button_pressed = false;');
   d.writeln('');
   d.writeln('');
   d.writeln('function accept_picks(document)');
   d.writeln('{');
   d.writeln('   var inputs          = document.fp_inputs;');
   d.writeln('   var picks_confirmed = false;');
   d.writeln('');
   d.writeln('');
   d.writeln('   if (validate_spreads(document) == false)');
   d.writeln('   {');
   d.writeln('      return false;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   if (validate_points(document.fp_inputs.points,true) == false)');
   d.writeln('   {');
   d.writeln('      return false;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   if (validate_name(document,true) == false)');
   d.writeln('   {');
   d.writeln('      return false;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   display_confirmation_dialog(document);');
   d.writeln('');
   d.writeln('   return true;');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function build_player_name(player_menu_index)');
   d.writeln('{');
   d.writeln('   if ( (player_menu_index < 0) || (player_menu_index > top.number_of_ps_players) )');
   d.writeln('   {');
   d.writeln('      player_menu_index = top.player_index;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   if (player_menu_index > 0)');
   d.writeln('   {');
   d.writeln('      return top.ps_players_description[player_menu_index-1]+" ("+top.ps_players[player_menu_index-1]+")";');
   d.writeln('   }');
   d.writeln('   else');
   d.writeln('   {');
   d.writeln('      return "";');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   return "";  // Should never get here.');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function display_confirmation_dialog(document)');
   d.writeln('{');
   d.writeln('   var inputs               = document.fp_inputs;');
   d.writeln('   var confirmation_message = "Post Season Week " + '+week+' + ');
   d.writeln('                              " Picks\\n\\n\\nName: " +');
   d.writeln('                              build_player_name(-1) +');
   d.writeln('                              "\\n\\n";');
   d.writeln('   var winning_team         = "";');
   d.writeln('   var losing_team          = "";');
   d.writeln('   var spread               = 0;');
   d.writeln('   var total_points_game    = "";');
   d.writeln('');
   d.writeln('');
   d.writeln('   for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('   {');
   d.writeln('      if (picks[i] == "H")');
   d.writeln('      {');
   d.writeln('         winning_team = pad_text_string(home_teams[i]);');
   d.writeln('         losing_team  = pad_text_string(visiting_teams[i]);');
   d.writeln('');
   d.writeln('         total_points_game = home_teams[i] + " over " + visiting_teams[i];');
   d.writeln('      }');
   d.writeln('      else');
   d.writeln('      {');
   d.writeln('         winning_team = pad_text_string(visiting_teams[i]);');
   d.writeln('         losing_team  = pad_text_string(home_teams[i]);');
   d.writeln('');
   d.writeln('         total_points_game = visiting_teams[i] + " over " + home_teams[i];');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      confirmation_message = confirmation_message + winning_team;');
   d.writeln('      confirmation_message = confirmation_message + "over   ";');
   d.writeln('      confirmation_message = confirmation_message + losing_team;');
   d.writeln('      confirmation_message = confirmation_message + "by   ";');
   d.writeln('');
   d.writeln('      if (spread_values[i] < 10)');
   d.writeln('      {');
   d.writeln('         spread = " " + spread_values[i];');
   d.writeln('      }');
   d.writeln('      else');
   d.writeln('      {');
   d.writeln('         spread = spread_values[i];');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      confirmation_message = confirmation_message + spread + "\\n";');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   confirmation_message = confirmation_message + "\\n\\""+total_points_game+"\\" Total Points: "+total_points+"\\n";');
   d.writeln('');
   d.writeln('   confirmation_message = confirmation_message + "\\n\\n" +');
   d.writeln('                          "Submit  - Submit your picks via automatic e-mail.\\n\\n" +');
   d.writeln('                          "Copy    - Copy your picks and manually e-mail them.\\n\\n" +');
   d.writeln('                          "Go Back - Return to Input Form.";');
   d.writeln('');
   d.writeln('   display_picks_message(confirmation_message,"confirm_picks");');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function display_picks_message(picks_message,message_mode)');
   d.writeln('{');
   d.writeln('   var background_color = "";');
   d.writeln('   var button_1         = "Go Back";');
   d.writeln('   var button_2         = "Submit";');
   d.writeln('   var button_3         = "Copy";');
   d.writeln('   var dialog_frame     = null;');
   d.writeln('   var green_color      = "#C4D79B";');
   d.writeln('   var white_color      = "white";');
   d.writeln('');
   d.writeln('');
   d.writeln('   background_color = green_color;');
   d.writeln('');
   d.writeln('   if (message_mode == "copy")');
   d.writeln('   {');
   d.writeln('      background_color = white_color;');
   d.writeln('');
   d.writeln('      picks_message  = "<span style=\\"font-family: Calibri;font-size:11pt\\">";');
   d.writeln('      picks_message += "<b>Manually create an e-mail message and send it to:</b><br><br>";');
   d.writeln('      picks_message += "fp@socal.rr.com<br><br>";');
   d.writeln('      picks_message += "<b>Copy the following into the message subject line:</b><br><br>";');
   d.writeln('      picks_message += build_player_name(-1) + " - Post Season Week "+'+week+'+" Picks<br><br>";');
   d.writeln('      picks_message += "<b>Copy all of the following exactly as is into the message body:</b><br><br>";');
   d.writeln('');
   d.writeln('      for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('      {');
   d.writeln('         picks_message += picks[i] + " by " + spread_values[i] + "<br>";');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      picks_message +="  Points: "+total_points;');  // There must be two spaces included before "Points:"
   d.writeln('');
   d.writeln('      if (picks_from_odds_button_pressed == true)');
   d.writeln('      {');
   d.writeln('         picks_message += "<br><br>These picks were generated from the NFL Odds.";');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   dialog_frame = window.open("","fp_picks","");');
   d.writeln('');
   d.writeln('   wd = dialog_frame.document.open();');
   d.writeln('');
   d.writeln('   wd.writeln("<html>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("<head>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("   <title>NFL Football Pool</title>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("   <link href=\\"fp.css\\" rel=\\"stylesheet\\" type=\\"text/css\\">");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("   <style type=\\"text/css\\">");');
   d.writeln('   wd.writeln("   <!--");');
   d.writeln('   wd.writeln("      .table_style {background-color:"+background_color+";border:3px solid black;text-align:left}");');
   d.writeln('   wd.writeln("   -->");');
   d.writeln('   wd.writeln("   </style>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("</head>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("<body class=\\"light_gray_background\\"");');
   d.writeln('   wd.writeln("      style=\\"border: 0px solid black;");');  //JL - Should be 1px, but FireFox has a bug.
   d.writeln('   wd.writeln("              color: black;");');
   d.writeln('   wd.writeln("        font-family: Calibri;\\">");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("<script language=\\"JavaScript\\" type=\\"text/javascript\\">");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("function respond_to_button(action)");');
   d.writeln('   wd.writeln("{");');
   d.writeln('   wd.writeln("   if (action == \\"submit\\")");');
   d.writeln('   wd.writeln("   {");');
   d.writeln('   wd.writeln("      top.fp_main.e_mail_picks(top.fp_main.document);");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("      return true;");');
   d.writeln('   wd.writeln("   }");');
   d.writeln('   wd.writeln("   else if (action == \\"copy\\")");');
   d.writeln('   wd.writeln("   {");');
   d.writeln('   wd.writeln("      top.fp_main.display_picks_message(\\"\\",\\"copy\\");");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("      return true;");');
   d.writeln('   wd.writeln("   }");');
   d.writeln('   wd.writeln("   else if (action == \\"go_back\\")");');
   d.writeln('   wd.writeln("   {");');
   d.writeln('   wd.writeln("      if (\\""+message_mode+"\\" == \\"copy\\")");');
   d.writeln('   wd.writeln("      {");');
   d.writeln('   wd.writeln("         top.fp_main.display_confirmation_dialog(top.fp_main.document);");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("         return true;");');
   d.writeln('   wd.writeln("      }");');
   d.writeln('   wd.writeln("      else");');
   d.writeln('   wd.writeln("      {");');
   d.writeln('   wd.writeln("         top.display_frame(\\"fp_main\\");");');
   d.writeln('   wd.writeln("      }");');
   d.writeln('   wd.writeln("   }");');
   d.writeln('   wd.writeln("   else  // Should never get here.");');
   d.writeln('   wd.writeln("   {");');
   d.writeln('   wd.writeln("      top.display_frame(\\"fp_main\\");");');
   d.writeln('   wd.writeln("   }");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("   // Reset picks_from_odds_button_pressed flag.");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("   top.fp_main.picks_from_odds_button_pressed = false;");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("   return true;");');
   d.writeln('   wd.writeln("}");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("<" + "/script>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("<center>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("<br>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("<table cellpadding=10 class=\\"table_style\\">");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("<tr><td><pre>"+picks_message+"</pre></td></tr>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("<tr align=center><td>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   if (message_mode == "confirm_picks")');
   d.writeln('   {');
   d.writeln('      wd.writeln("   <input type=button style=\\"font-size: 11pt; font-family: Calibri; border: 1px solid black\\" value=\\""+button_2+"\\" onClick=respond_to_button(\\"submit\\");>");');
   d.writeln('      wd.writeln("   &nbsp&nbsp&nbsp");');
   d.writeln('      wd.writeln("   <input type=button style=\\"font-size: 11pt; font-family: Calibri; border: 1px solid black\\" value=\\""+button_3+"\\" onClick=respond_to_button(\\"copy\\");>");');
   d.writeln('      wd.writeln("   &nbsp&nbsp&nbsp");');
   d.writeln('   }');
   d.writeln('   wd.writeln("   <input type=button style=\\"font-size: 11pt; font-family: Calibri; border: 1px solid black\\" value=\\""+button_1+"\\" onClick=respond_to_button(\\"go_back\\");>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("</td></tr>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("</table>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("<br>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("</center>");');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("</body>")');
   d.writeln('   wd.writeln("");');
   d.writeln('   wd.writeln("</html>");');
   d.writeln('');
   d.writeln('   wd.close();');
   d.writeln('');
   d.writeln('   // Hide the frame showing the Input Form and show the frame showing the "picks message."');
   d.writeln('');
   d.writeln('   top.display_frame("fp_picks");');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function e_mail_picks(document)');
   d.writeln('{');
   d.writeln('   var d        = document;');
   d.writeln('   var inputs   = document.fp_inputs;');
   d.writeln('   var name     = build_player_name(-1);');
   d.writeln('   var mail_msg = "";');
   d.writeln('');
   d.writeln('');
   d.writeln('   alert("An e-mail message containing your Post Season Week ' + week + ' Picks will be displayed.\\n\\n"');
   d.writeln('         + "Don\'t modify the message.  Click \\"Send\\" to submit your picks.");');
   d.writeln('');
   d.writeln('   mail_msg += "mailto:fp@socal.rr.com?subject=";');
   d.writeln('   mail_msg += escape(name + " - Post Season Week "+'+week+'+" Picks");');
   d.writeln('   mail_msg += "&body=";');
   d.writeln('');
   d.writeln('   for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('   {');
   d.writeln('      mail_msg += escape(picks[i] + " by " + spread_values[i] + "\\n");');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   mail_msg += escape("  Points: "+total_points);');  // There must be two spaces included before "Points:"
   d.writeln('');
   d.writeln('   if (picks_from_odds_button_pressed == true)');
   d.writeln('   {');
   d.writeln('      mail_msg += escape("\\n\\nThese picks were generated from the NFL Odds.");');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // If we are running on an iPad or iPhone create the mail message using a new temporary window.');
   d.writeln('');
   d.writeln('   if (navigator.platform.substring(0,2) == "iP")');
   d.writeln('   {');
   d.writeln('      temp_window = window.open(mail_msg,"","top=0,left=0,width=100,height=100");');
   d.writeln('');
   d.writeln('      setTimeout(function(){temp_window.close()},1000);');
   d.writeln('   }');
   d.writeln('   else');
   d.writeln('   {');
   d.writeln('      d.location.href = mail_msg;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   return true;');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function generate_picks_from_odds(document)');
   d.writeln('{');
   d.writeln('   var exit_loop          = false;');
   d.writeln('   var index              = 0;');
   d.writeln('   var index1             = 0;');
   d.writeln('   var index2             = 0;');
   d.writeln('   var nfl_connection     = null;');
   d.writeln('   var nfl_games_array    = new Array('+number_of_games+');');
   d.writeln('   var nfl_odds           = null;');
   d.writeln('   var nfl_odds_url       = ["\\"http://www.footballlocks.com/nfl_lines.shtml\\""];');
   d.writeln('   var nfl_playoff_round  = "not_assigned_yet";');
   d.writeln('   var nfl_playoff_rounds = ["Wild Card Weekend Playoff Games","Divisional Playoff Games","Conference Championship Playoffs","The Super Bowl"];');
   d.writeln('   var nfl_team_cities    = ["Arizona",  "Atlanta","Baltimore","Buffalo","Carolina","Chicago","Cincinnati","Cleveland","Dallas", "Denver", "Detroit","Giants","Green Bay","Houston","Indianapolis","Jacksonville","Jets","Kansas City","Miami",   "Minnesota","New England","New Orleans","Oakland","Philadelphia","Philadephia","Pittsburgh","San Diego","San Francisco","Seattle", "Los Angeles","Tampa Bay", "Tennessee","Washington"];');
   d.writeln('   var nfl_team_names     = ["Cardinals","Falcons","Ravens",   "Bills",  "Panthers","Bears",  "Bengals",   "Browns",   "Cowboys","Broncos","Lions",  "Giants","Packers",  "Texans", "Colts",       "Jaguars",     "Jets","Chiefs",     "Dolphins","Vikings",  "Patriots",   "Saints",     "Raiders","Eagles",      "Eagles",     "Steelers",  "Chargers", "49ers",        "Seahawks","Rams",       "Buccaneers","Titans",   "Redskins"  ];');
   d.writeln('   var prompt_message     = "";');
   d.writeln('   var user_message       = "";');
   d.writeln('   var temp_string        = "";');
   d.writeln('   var user_input         = "";');
   d.writeln('   var valid_total_points = true;');
   d.writeln('');
   d.writeln('');
   d.writeln('   // Attempt to get the NFL Odds from the internet.');
   d.writeln('');
   d.writeln('   for (var i = 0; i < nfl_odds_url.length; i++)');
   d.writeln('   {');
   d.writeln('      nfl_connection = new XMLHttpRequest();');
   d.writeln('');
   d.writeln('      try');
   d.writeln('      {');
   d.writeln('         nfl_connection.open("GET",encodeURI("https://query.yahooapis.com/v1/public/yql?q=select * from html where url="+nfl_odds_url[i])+" and compat=\\"html5\\"",false);');
   d.writeln('         nfl_connection.send(null);');
   d.writeln('');
   d.writeln('         if (nfl_connection.readyState == 4)');
   d.writeln('         {');
   d.writeln('            nfl_odds = nfl_connection.responseText;');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('      catch(e)');
   d.writeln('      {');
   d.writeln('         if (i == nfl_odds_url.length-1)');
   d.writeln('         {');
   d.writeln('            alert("\\"Picks From Odds\\" failed.");');
   d.writeln('');
   d.writeln('            return false;');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      // Strip off as much of the ending of the nfl_odds html string as possible.');
   d.writeln('');
   d.writeln('      index = nfl_odds.indexOf("View This Season");');
   d.writeln('');
   d.writeln('      if (index != -1) nfl_odds = nfl_odds.substring(0,index);');
   d.writeln('');
   d.writeln('      // Remove unneeded information from the nfl_odds html string.');
   d.writeln('');
   d.writeln('      nfl_odds = nfl_odds.replace(/(At |NY )/gi,"");');         // Get rid of all "At " and "NY".
   d.writeln('      nfl_odds = nfl_odds.replace(/( |\xA0)/gi,"");');          // Get rid of all blank spaces and "&nbsp" (hex code = A0).
   d.writeln('      nfl_odds = nfl_odds.replace(/(\\r\\n|\\r|\\n)/gi,"");');  // Get rid of all line feeds.
   d.writeln('      nfl_odds = nfl_odds.replace(/(<p>|<\\/p>)/gi,"");');      // Get rid of all "<p>" and "</p>".
   d.writeln('      nfl_odds = nfl_odds.replace(/(<br>|<br\\/>)/gi,"");');    // Get rid of all "<br>" and "<br/>".
   d.writeln('');
   d.writeln('      // Determine if the NFL Odds for this input week are available.');
   d.writeln('');
   d.writeln('      nfl_playoff_round = nfl_playoff_rounds['+week+'-1];');
   d.writeln('      nfl_playoff_round = nfl_playoff_round.replace(/( |\xA0)/gi,"");');  // Get rid of all blank spaces and "&nbsp" (hex code = A0).
   d.writeln('');
   d.writeln('      index = nfl_odds.indexOf(nfl_playoff_round);');
   d.writeln('');
   d.writeln('      if (index == -1)');
   d.writeln('      {');
   d.writeln('         if (i == nfl_odds_url.length-1)');
   d.writeln('         {');
   d.writeln('            alert("NFL Odds for Post Season Week ' + week + ' are not available.")');
   d.writeln('');
   d.writeln('            return;');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('      else');
   d.writeln('      {');
   d.writeln('         break;  // Break out of this loop and continue since we found the NFL Odds.');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Make sure the user name has been selected, if not return.');
   d.writeln('');
   d.writeln('   if (validate_name(document,false) == false)');
   d.writeln('   {');
   d.writeln('      alert("You must select your name before picks from odds can be generated.");');
   d.writeln('');
   d.writeln('      return false;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Display informational message to user.');
   d.writeln('');
   d.writeln('   user_message = "\\"Picks From Odds\\" will:\\n\\n";');
   d.writeln('   user_message = user_message + "   - Clear the predictions on the Input Form\\n";');
   d.writeln('   user_message = user_message + "   - Get the NFL Odds from the internet\\n";');
   d.writeln('   user_message = user_message + "   - Populate the Input Form based on the NFL Odds";');
   d.writeln('');
   d.writeln('   if (confirm(user_message) == false)');
   d.writeln('   {');
   d.writeln('      return false;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Set the picks_from_odds_button_pressed flag.');
   d.writeln('');
   d.writeln('   picks_from_odds_button_pressed = true;');
   d.writeln('');
   d.writeln('   // Clear out the picks and spread_values arrays and also the picks and spreads on the Input Form.');
   d.writeln('');
   d.writeln('   for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('   {');
   d.writeln('      picks        [i] = "";');
   d.writeln('      spread_values[i] = "";');
   d.writeln('');
   d.writeln('      document.fp_inputs.elements["pick"  +(i+1)].value = 0;');
   d.writeln('      document.fp_inputs.elements["spread"+(i+1)].value = 0;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Strip off as much of the beginning of the nfl_odds html string as possible.');
   d.writeln('');
   d.writeln('   nfl_odds = nfl_odds.substring(index,nfl_odds.length);');
   d.writeln('');
   d.writeln('   // Remove the first occurrence of a table record in the nfl_odds html string which does not contain any game information.');
   d.writeln('');
   d.writeln('   nfl_odds = nfl_odds.replace(/<tr>/i,"");');
   d.writeln('   nfl_odds = nfl_odds.replace(/<\\/tr>/i,"");');
   d.writeln('');
   d.writeln('   // Extract the game information for each game out of the nfl_odds html string and put into the nfl_games_array.');
   d.writeln('');
   d.writeln('   for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('   {');
   d.writeln('      // Find the next table record in the nfl_odds html string and put it in nfl_games_array.');
   d.writeln('');
   d.writeln('      index1 = nfl_odds.indexOf("<tr>");');
   d.writeln('      index2 = nfl_odds.indexOf("<\\/tr>");');
   d.writeln('');
   d.writeln('      nfl_games_array[i] = nfl_odds.substring(index1,index2+5);');
   d.writeln('');
   d.writeln('      //JL alert(":" + nfl_games_array[i] + ":");');
   d.writeln('');
   d.writeln('      // If a game is even as indicated by a spread value of "PK", then remove the html span tags that surround "PK".');
   d.writeln('');
   d.writeln('      index = nfl_games_array[i].indexOf("PK");');
   d.writeln('');
   d.writeln('      if (index != -1)');
   d.writeln('      {');
   d.writeln('         index1 = nfl_games_array[i].indexOf("<span");');
   d.writeln('         index2 = nfl_games_array[i].indexOf("span>");');
   d.writeln('');
   d.writeln('         if ( (index1 != -1) && (index2 > index1) )');
   d.writeln('         {');
   d.writeln('            temp_string = nfl_games_array[i].substring(index1,index2+5);');
   d.writeln('');
   d.writeln('            nfl_games_array[i] = nfl_games_array[i].replace(temp_string,"PK");');
   d.writeln('         }');
   d.writeln('      }')
   d.writeln('');
   d.writeln('      //JL alert(":" + nfl_games_array[i] + ":");');
   d.writeln('');
   d.writeln('      // Remove the opening and closing table record html tags.');
   d.writeln('');
   d.writeln('      nfl_games_array[i] = nfl_games_array[i].replace(/<tr>/i,"");');
   d.writeln('      nfl_games_array[i] = nfl_games_array[i].replace(/<\\/tr>/i,"");');
   d.writeln('');
   d.writeln('      // Remove the first opening table data html tag.');
   d.writeln('');
   d.writeln('      nfl_games_array[i] = nfl_games_array[i].replace(/<td>/i,"");');
   d.writeln('');
   d.writeln('      // Remove unneeded information leading up to the next table data html tag.');
   d.writeln('');
   d.writeln('      index = nfl_games_array[i].indexOf("<td>");');
   d.writeln('');
   d.writeln('      nfl_games_array[i] = nfl_games_array[i].substring(index,nfl_games_array[i].length);');
   d.writeln('');
   d.writeln('      // Replace remaining opening and closing table data html tags with blanks.');
   d.writeln('');
   d.writeln('      nfl_games_array[i] = nfl_games_array[i].replace(/<td>/gi," ");');
   d.writeln('      nfl_games_array[i] = nfl_games_array[i].replace(/<\\/td>/gi," ");');
   d.writeln('');
   d.writeln('      // Remove leading and trailing blanks.');
   d.writeln('');
   d.writeln('      nfl_games_array[i] = nfl_games_array[i].trim();');
   d.writeln('');
   d.writeln('      // Convert consecutive blanks to a single blank.');
   d.writeln('');
   d.writeln('      nfl_games_array[i] = nfl_games_array[i].replace(/\\s+/g," ");');
   d.writeln('');
   d.writeln('      // Put the nfl game information from the nfl_games_array into a temp_string so');
   d.writeln('      // we can rearrange the information and then put it back into the nfl_games_array.');
   d.writeln('');
   d.writeln('      temp_string = nfl_games_array[i].split(" ");');
   d.writeln('');
   d.writeln('      // Determine the name of the team favored to win from its city.');
   d.writeln('');
   d.writeln('      for (var j = 0; j < nfl_team_cities.length; j++)');
   d.writeln('      {');
   d.writeln('         if (temp_string[0] == nfl_team_cities[j].replace(/ /g,""))');
   d.writeln('         {');
   d.writeln('            temp_string[0] = nfl_team_names[j];');
   d.writeln('');
   d.writeln('            break;');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      // If the point spread is not a valid number, then set it to zero to force no pick for this game later.');
   d.writeln('');
   d.writeln('      if (isNaN(temp_string[1]) == true) temp_string[1] = 0;');
   d.writeln('');
   d.writeln('      // Put the point spread in the first element in nfl_games_array (delimiter being used is a blank, i.e., " ").');
   d.writeln('');
   d.writeln('      nfl_games_array[i] = temp_string[1] + " ";');
   d.writeln('');
   d.writeln('      // Determine if the team favored to win is the home team or visiting');
   d.writeln('      // team and put an indicator in the second element in nfl_games_array.');
   d.writeln('');
   d.writeln('      exit_loop = false;');
   d.writeln('');
   d.writeln('      for (var j = 0; j < '+number_of_games+'; j++)');
   d.writeln('      {');
   d.writeln('         if (temp_string[0] == home_teams[j])');
   d.writeln('         {');
   d.writeln('            nfl_games_array[i] = nfl_games_array[i] + "H" + " ";');
   d.writeln('');
   d.writeln('            exit_loop = true;');
   d.writeln('         }');
   d.writeln('         else if (temp_string[0] == visiting_teams[j])');
   d.writeln('         {');
   d.writeln('            nfl_games_array[i] = nfl_games_array[i] + "V" + " ";');
   d.writeln('');
   d.writeln('            exit_loop = true;');
   d.writeln('         }');
   d.writeln('');
   d.writeln('         if (exit_loop == true)');
   d.writeln('         {');
   d.writeln('            if (j == '+number_of_games+'-1)');
   d.writeln('            {');
   d.writeln('               // This is the last game scheduled so use the total points for the Total Points Prediction.');
   d.writeln('');
   d.writeln('               if (isNaN(temp_string[3]) == true)');
   d.writeln('               {');
   d.writeln('                  temp_string[3] = "";');
   d.writeln('               }');
   d.writeln('               else');
   d.writeln('               {');
   d.writeln('                  temp_string[3] = Math.floor(temp_string[3]);');
   d.writeln('               }');
   d.writeln('');
   d.writeln('               document.fp_inputs.points.value = temp_string[3];');
   d.writeln('            }');
   d.writeln('');
   d.writeln('            break;');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      // Put the name of the team favored to win in the third element in nfl_games_array.');
   d.writeln('');
   d.writeln('      nfl_games_array[i] = nfl_games_array[i] + temp_string[0];');
   d.writeln('');
   d.writeln('      // Get rid of this table record in the nfl_odds html string so that the next');
   d.writeln('      // table record in it is found during the next iteration of this "for" loop.');
   d.writeln('');
   d.writeln('      nfl_odds = nfl_odds.replace(/<tr>/i,"");');
   d.writeln('      nfl_odds = nfl_odds.replace(/<\\/tr>/i,"");');
   d.writeln('');
   d.writeln('      //JL alert(":" + nfl_games_array[i] + ":");');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Convert each element of the nfl_games_array into an array itself and make');
   d.writeln('   // sure that the first element (which contains the spread value) is of type float.');
   d.writeln('');
   d.writeln('   for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('   {');
   d.writeln('      nfl_games_array[i]    = nfl_games_array[i].split(" ");');
   d.writeln('      nfl_games_array[i][0] = parseFloat(nfl_games_array[i][0]);');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Populate picks and spread_values from the nfl_games_array.');
   d.writeln('');
   d.writeln('   for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('   {');
   d.writeln('      exit_loop = false;');
   d.writeln('');
   d.writeln('      for (var j = 0; j < '+number_of_games+'; j++)');
   d.writeln('      {');
   d.writeln('         if (nfl_games_array[i][2] == home_teams[j])');
   d.writeln('         {');
   d.writeln('            picks[j] = "H";');
   d.writeln('');
   d.writeln('            exit_loop = true;');
   d.writeln('         }');
   d.writeln('         else if (nfl_games_array[i][2] == visiting_teams[j])');
   d.writeln('         {');
   d.writeln('            picks[j] = "V";');
   d.writeln('');
   d.writeln('            exit_loop = true;');
   d.writeln('         }');
   d.writeln('');
   d.writeln('         if (exit_loop == true)');
   d.writeln('         {');
   d.writeln('            if (nfl_games_array[i][0] == 0)');
   d.writeln('            {');
   d.writeln('               // The game spread is invalid, so force no pick for this game.');
   d.writeln('');
   d.writeln('               picks[j]         = 0;');
   d.writeln('               spread_values[j] = "";');
   d.writeln('            }');
   d.writeln('            else');
   d.writeln('            {');
   d.writeln('               spread_values[j] = nfl_games_array[i][0];');
   d.writeln('               spread_values[j] = Math.abs(spread_values[j]);');    // Convert the spread value to a positive number.
   d.writeln('               spread_values[j] = Math.floor(spread_values[j]);');  // Round the spread value down to a whole number.
   d.writeln('            }');
   d.writeln('');
   d.writeln('            break;');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Put the picks and spread_values on Input Form.');
   d.writeln('');
   d.writeln('   for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('   {');
   d.writeln('      document.fp_inputs.elements["pick"  +(i+1)].value = picks[i];');
   d.writeln('      document.fp_inputs.elements["spread"+(i+1)].value = spread_values[i];');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   // Validate Total Points Prediction.');
   d.writeln('');
   d.writeln('   if (validate_points(document.fp_inputs.points,false) == false)');
   d.writeln('   {');
   d.writeln('      prompt_message = "\\"Picks From Odds\\" can\'t find Total Points for \\""+visiting_teams['+number_of_games+'-1]+" at "+home_teams['+number_of_games+'-1]+".\\"  Enter a number between 1 and 99.\\n\\n";');
   d.writeln('');
   d.writeln('      while (user_input != null)');
   d.writeln('      {');
   d.writeln('         user_input = prompt(prompt_message,"");');
   d.writeln('');
   d.writeln('         if (user_input != null)');
   d.writeln('         {');
   d.writeln('            user_input = user_input.replace(/ /g,"");');  // Remove all blanks in user_input.
   d.writeln('');
   d.writeln('            document.fp_inputs.points.value = user_input;');
   d.writeln('');
   d.writeln('            if (validate_points(document.fp_inputs.points,false) == true)');
   d.writeln('            {');
   d.writeln('               break;');
   d.writeln('            }');
   d.writeln('         }');
   d.writeln('         else');
   d.writeln('         {');
   d.writeln('            valid_total_points = false;');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   if (valid_total_points == true)');
   d.writeln('   {');
   d.writeln('      // Accept the picks (they will be validated).');
   d.writeln('');
   d.writeln('      accept_picks(document);');
   d.writeln('   }');
   d.writeln('   else');
   d.writeln('   {');
   d.writeln('      // Clear the picks_from_odds_button_pressed flag.');
   d.writeln('');
   d.writeln('      picks_from_odds_button_pressed = false;');
   d.writeln('   }');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function pad_text_string(input_string)');
   d.writeln('{');
   d.writeln('   var output_string   = "";');
   d.writeln('   var required_length = 13;');
   d.writeln('');
   d.writeln('');
   d.writeln('   output_string = input_string;');
   d.writeln('');
   d.writeln('   while (output_string.length < required_length)');
   d.writeln('   {');
   d.writeln('      output_string += " ";');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   return output_string;');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function validate_name(document,display_error)');
   d.writeln('{');
   d.writeln('   var name_menu  = document.fp_inputs.player_name_menu;');
   d.writeln('   var name_index = name_menu.selectedIndex;');
   d.writeln('');
   d.writeln('');
   d.writeln('   top.player_index = name_menu.options[name_index].value;');
   d.writeln('');
   d.writeln('   if (top.player_index == 0)');
   d.writeln('   {');
   d.writeln('      if (display_error == true) alert("Select your name before accepting your picks.");');
   d.writeln('');
   d.writeln('      name_menu.focus();');
   d.writeln('');
   d.writeln('      return false;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   return true;');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function validate_points(total_points_element,display_error)');
   d.writeln('{');
   d.writeln('   var error_message           = "";');
   d.writeln('   var losing_team             = "";');
   d.writeln('   var total_points_prediction = 0;');
   d.writeln('   var winning_team            = "";');
   d.writeln('');
   d.writeln('');
   d.writeln('   total_points_prediction = total_points_element.value.replace(/\\./g,"_");');  // Force any value that includes a "." to fail.
   d.writeln('');
   d.writeln('   if ( (isNaN(total_points_prediction) == true) || (total_points_prediction < 1) || (total_points_prediction > 99) )');
   d.writeln('   {');
   d.writeln('      if (display_error == true)');
   d.writeln('      {');
   d.writeln('         if (picks['+number_of_games+'-1] == "H")');
   d.writeln('         {');
   d.writeln('            winning_team = home_teams['+number_of_games+'-1];');
   d.writeln('            losing_team  = visiting_teams['+number_of_games+'-1];');
   d.writeln('         }');
   d.writeln('         else');
   d.writeln('         {');
   d.writeln('            winning_team = visiting_teams['+number_of_games+'-1];');
   d.writeln('            losing_team  = home_teams['+number_of_games+'-1];');
   d.writeln('         }');
   d.writeln('');
   d.writeln('         error_message  = "Enter a number between 1 and 99 for the Total Points Prediction for:\\n\\n";');
   d.writeln('         error_message += winning_team + " over " + losing_team + " (Game ' + number_of_games + ').";');
   d.writeln('');
   d.writeln('         alert(error_message);');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      total_points_element.value = "";');
   d.writeln('      total_points_element.focus();');
   d.writeln('');
   d.writeln('      total_points = 0;');
   d.writeln('');
   d.writeln('      return false;');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   total_points = parseInt(total_points_prediction);');  // Remove any leading zeros.
   d.writeln('');
   d.writeln('   total_points_element.value = total_points;');
   d.writeln('');
   d.writeln('   return true;');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('function validate_spreads(document)');
   d.writeln('{');
   d.writeln('   var error_message = "";');
   d.writeln('   var inputs        = document.fp_inputs;');
   d.writeln('   var losing_team   = "";');
   d.writeln('   var pick_index    = 0;');
   d.writeln('   var picks_select  = 0;');
   d.writeln('   var winning_team  = "";');
   d.writeln('');
   d.writeln('');
   d.writeln('   picks_select_array = new Array('+number_of_games+');');
   d.writeln('');
   d.writeln('   for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('   {');
   d.writeln('      for (var j = 0; j < inputs.elements.length; j++)');
   d.writeln('      {');
   d.writeln('         if (inputs.elements[j].name == "pick"+(i+1))');
   d.writeln('         {');
   d.writeln('            picks_select = inputs.elements[j];');
   d.writeln('            picks_index  = picks_select.selectedIndex;');
   d.writeln('            picks[i]     = picks_select.options[picks_index].value;');
   d.writeln('');
   d.writeln('            picks_select_array[i]= picks_select;');
   d.writeln('         }');
   d.writeln('');
   d.writeln('         if (inputs.elements[j].name == "spread"+(i+1))');
   d.writeln('         {');
   d.writeln('            spread_elements[i] = inputs.elements[j];');
   d.writeln('            spread_values[i]   = inputs.elements[j].value;');
   d.writeln('         }');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('   {');
   d.writeln('      if (picks[i] == 0)');
   d.writeln('      {');
   d.writeln('         alert("Pick a winner (V or H) for " + visiting_teams[i] + " at " + home_teams[i] + " (Game " + (i+1) + ").");');
   d.writeln('');
   d.writeln('         picks_select_array[i].focus();');
   d.writeln('');
   d.writeln('         return false;');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   for (var i = 0; i < '+number_of_games+'; i++)');
   d.writeln('   {');
   d.writeln('      if (picks[i] == "H")');
   d.writeln('      {');
   d.writeln('         winning_team = home_teams[i];');
   d.writeln('         losing_team  = visiting_teams[i];');
   d.writeln('      }');
   d.writeln('      else');
   d.writeln('      {');
   d.writeln('         winning_team = visiting_teams[i];');
   d.writeln('         losing_team  = home_teams[i];');
   d.writeln('      }');
   d.writeln('');
   d.writeln('      error_message = "Enter a number between 1 and 99 for the predicted margin of victory for:\\n\\n"');
   d.writeln('                      + winning_team + " over " + losing_team + " (Game " + (i+1) + ").";');
   d.writeln('');
   d.writeln('      spread_values[i] = spread_values[i].replace(/\\./g,"_");');  // Force any value that includes a "." to fail.
   d.writeln('');
   d.writeln('      if ( (isNaN(spread_values[i]) == true) || (spread_values[i] < 1) || (spread_values[i] > 99) )');
   d.writeln('      {');
   d.writeln('         alert(error_message);');
   d.writeln('         spread_elements[i].value = "";');
   d.writeln('         spread_elements[i].focus();');
   d.writeln('         return false;');
   d.writeln('      }');
   d.writeln('      else');
   d.writeln('      {');
   d.writeln('         spread_values[i] = parseInt(spread_values[i]);');  // Remove any leading zeros.
   d.writeln('');
   d.writeln('         spread_elements[i].value = spread_values[i];');
   d.writeln('      }');
   d.writeln('   }');
   d.writeln('');
   d.writeln('   return true;');
   d.writeln('}');
   d.writeln('');
   d.writeln('');
   d.writeln('</' + 'script>');
   d.writeln('');
   d.writeln('');

   d.writeln('<center>');
   d.writeln('');

   d.writeln('<br><font style="font-size: 18pt">Input Form - Post Season Week '+ week +'</font><br><br>');
   d.writeln('');

   d.writeln('<form name="fp_inputs">');
   d.writeln('');

   d.writeln('<table align=center');
   d.writeln('         class="b3_border"');
   d.writeln('        border=0');
   d.writeln('       bgcolor=white');
   d.writeln('   cellspacing=0');
   d.writeln('   cellpadding=5>');
   d.writeln('');

   d.writeln('<tr VALIGN=CENTER bgcolor=#C4D79B>');
   d.writeln('<td ALIGN=RIGHT class="bb2_border" colspan=2><b><font style="font-size: 13pt">NAME:</font></b></td>');
   d.writeln('<td VALIGN=LEFT class="bb2_border" colspan=5>');
   d.writeln('<select style="font-size: 13pt; font-family: Calibri; background-color:#C4D79B; border: 1px solid gray" name="player_name_menu" size=1>');
   for (var i = 0; i <= top.number_of_ps_players; i++)
   {
      switch (i)
      {
         case top.player_index:
            d.writeln('   <option selected value="'+i+'">'+build_player_name(i));
            break;
         default:
            d.writeln('   <option          value="'+i+'">'+build_player_name(i));
            break;
      }
   }
   d.writeln('</select>');
   d.writeln('</td>');
   d.writeln('</tr>');
   d.writeln('');

   d.writeln('<tr ALIGN=CENTER bgcolor=#DCE6F1>');
   d.writeln('<td class="br2_bb2_border"><font style="font-size: 13pt"><b>GAME</b></font></td>');
   d.writeln('<td class="bb2_border"><font style="font-size: 13pt"><b>VISITOR</b></font></td>');
   d.writeln('<td class="bb2_border"><font style="font-size: 13pt"><br></font></td>');
   d.writeln('<td class="br2_bb2_border"><font style="font-size: 13pt"><b>HOME</b></font></td>');
   d.writeln('<td class="bb2_border" colspan=3><font style="font-size: 13pt"><b>PREDICTION</b></font></td>');
   d.writeln('</tr>');
   d.writeln('');

   for (var i = 1; i <= number_of_games; i++)
   {
      d.writeln('<tr align=center>');
      if (i == number_of_games)
      {
         d.writeln('<td class="br2_bb2_border"><font style="font-size: 13pt"><b>' + i + '</b></font></td>');
         d.writeln('<td class="gr1_bb2_border"><font style="font-size: 13pt">' + visiting_teams[i-1] + '</font></td>');
         d.writeln('<td class="gr1_bb2_border"><font style="font-size: 13pt">at</font></td>');
         d.writeln('<td class="br2_bb2_border"><font style="font-size: 13pt">' + home_teams[i-1] + '</font></td>');
         d.writeln('<td class="gr1_bb2_border"><select style="font-size: 12pt; font-family: Calibri; border: 1px solid lightgray" name="pick'+i+'" size=1>');
      }
      else
      {
         d.writeln('<td class="br2_gb1_border"><font style="font-size: 13pt"><b>' + i + '</b></font></td>');
         d.writeln('<td><font style="font-size: 13pt">' + visiting_teams[i-1] + '</font></td>');
         d.writeln('<td><font style="font-size: 13pt">at</font></td>');
         d.writeln('<td class="br2_gb1_border"><font style="font-size: 13pt">' + home_teams[i-1] + '</font></td>');
         d.writeln('<td><select style="font-size: 12pt; font-family: Calibri; border: 1px solid lightgray" name="pick'+i+'" size=1>');
      }
      d.writeln('       <option selected value="0">');
      d.writeln('       <option          value="H">H');
      d.writeln('       <option          value="V">V');
      d.writeln('    </select></td>');
      if (i == number_of_games)
      {
         d.writeln('<td class="gr1_bb2_border"><font style="font-size: 13pt">by</font></td>');
         d.writeln('<td class="bb2_border"><font style="font-size: 13pt">');
      }
      else
      {
         d.writeln('<td><font style="font-size: 13pt">by</font></td>');
         d.writeln('<td><font style="font-size: 13pt">');
      }
      d.writeln('    <input type=text style="text-align:center; font-size:12pt; font-family: Calibri; border: 1px solid lightgray" name="spread'+i+'" size="2" maxlength="2">');
      d.writeln('</font></td>'); 
      d.writeln('</tr>');  
      d.writeln('');    
   }

   d.writeln('<tr align=center>');
   d.writeln('<td class="no_border" colspan=1><font>&nbsp;</font></td>');
   d.writeln('<td class="no_border" colspan=5 align=right><font style="font-size: 13pt">Game '+number_of_games+' Total Points:</font></td>');
   d.writeln('<td class="no_border"  colspan=1><font style="font-size: 13pt">');
   d.writeln('    <input type=text style="text-align:center; font-size:12pt; font-family: Calibri; border: 1px solid gray" name="points" size="2" maxlength="2">');
   d.writeln('</font></td>'); 
   d.writeln('</tr>');

   d.writeln('</table>');
   d.writeln('');

   d.writeln('<table cols=1 align=center>');
   d.writeln('');

   d.writeln('<tr><td class="no_border"><p></td></tr>');
   d.writeln('');

   d.writeln('<tr align=center>');
   d.writeln('<td class="no_border">');
   d.writeln('<input type=button style="font-size: 11pt; font-family: Calibri; border: 1px solid black" name="submit" value="Accept" onClick="accept_picks(document); return true;">');
   d.writeln('&nbsp;&nbsp;&nbsp;');
   d.writeln('<input type=button style="font-size: 11pt; font-family: Calibri; border: 1px solid black" name="picks_from_odds" value="Picks From Odds" onClick="generate_picks_from_odds(document); return true;">');
   d.writeln('&nbsp;&nbsp;&nbsp;');
   d.writeln('<input type=reset style="font-size: 11pt; font-family: Calibri; border: 1px solid black" name="reset_button" value="Reset" onClick="document.fp_inputs.pick1.focus(); return true;">');
   d.writeln('</td>');
   d.writeln('</tr>');
   d.writeln('');

   d.writeln('</table>');
   d.writeln('');
   d.writeln('');

   d.writeln('</form>');
   d.writeln('');

   d.writeln('</center>');
   d.writeln('');

   d.writeln('<script language="JavaScript" type="text/javascript">document.fp_inputs.pick1.focus();<'+'/script>');
   d.writeln('');

   d.writeln('</body>');
   d.writeln('');

   d.writeln('</html>');

   d.close();

   return true;
}


function build_player_name(player_menu_index)
{
   var players             = top.rs_players;
   var players_description = top.rs_players_description;


   if (top.current_input_week > 17)
   {
      players             = top.ps_players;
      players_description = top.ps_players_description;
   }

   if ( (player_menu_index < 0) || (player_menu_index > players.length) )
   {
      player_menu_index = top.player_index;
   }

   if (player_menu_index > 0)
   {
      return players_description[player_menu_index-1]+" ("+players[player_menu_index-1]+")";
   }
   else
   {
      return "";
   }

   return "";  // Should never get here.
}


function input_form_global_variables()
{
   if (top.current_input_week == null)
   {
      alert("This page cannot be displayed in a separate window.");

      top.location.href = "fp_empty.html";
      top.close();

      return false;
   }

   return true;
}


function validate_password()
{
   var  actual_password = String.fromCharCode(102,112) + window.top.fp_year;
   var         password = document.password_input.password;
   var   valid_password = false;


   if (password.value == actual_password)
   {
      return true;
   }
   else
   {
      alert("Invalid password.");
      password.value = "";
      password.focus();
      return false;
   }
}
